<UserControl x:Class="SGPTWpf.SGPtmvvm.Vistas.DialogoRecuperacionCuentaLoginView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500"
             

             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
             
             xmlns:cmd="http://www.galasoft.ch/mvvmlight"

             xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             xmlns:helpers="clr-namespace:SGPTWpf.Helpers" >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="38" />
            <RowDefinition Height="33" />
            <RowDefinition Height="33" />
            <RowDefinition Height="33" />
            <RowDefinition Height="33" />
            <RowDefinition Height="1" />
            <RowDefinition Height="37" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="120"/>

        </Grid.ColumnDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="4" Margin="0" FontSize="19" FontWeight="Bold">Ingrese los siguientes datos para continuar</TextBlock>
        <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" >* DUI:</TextBlock>
        <TextBox x:Name="Idduipersonax"  Height="25" Grid.Row="1" Grid.Column="1" FontSize="15" Controls:TextBoxHelper.ClearTextButton="True"
                                     Controls:TextBoxHelper.Watermark="DUI: 01234567-9">
            <Binding Path="Idduipersonay" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                <Binding.ValidationRules>
                    <local:TextBoxNoVacioValidationRule x:Name="DuiValidation333"  ValidatesOnTargetUpdated="True" Message="DUI Requerido"/>
                    <local:ValidacionDUI x:Name="DuiValidation322"  ValidatesOnTargetUpdated="True" Message="Ingrese un numero valido con formato 01234567-1"/>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <!--<TextBox   Grid.Row="1" Grid.Column="1" Text="{Binding DUI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
        
        <!--<TextBlock Grid.Row="2">Nombre completo:</TextBlock>
        <TextBox   Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding NombreApellido,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->

        <TextBlock Text="* Nombres:" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"  Grid.Row="2" Grid.Column="0"/>
        <TextBox x:Name="txtNombrex" IsEnabled="{Binding HabilitartxtNombrex}" FontSize="15" Height="25" Grid.Row="2" Grid.Column="1" Controls:TextBoxHelper.ClearTextButton="True">
            <Binding Path="Nombrespersona" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                <Binding.ValidationRules>
                    <local:TextBoxNoVacioValidationRule x:Name="PrimerNombreValidation"  ValidatesOnTargetUpdated="True" Message="Nombre Requerido"/>
                    <local:ExcluirChar x:Name="PrimerNombreValidation2"  ValidatesOnTargetUpdated="True" Message="El nombre contiene caracteres no permitidos."/>
                    <local:ValidacionMenorQue NumeritoMenorIgualQue="30" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="PrimerNombrevalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima del nombre es 30"/>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <!--<TextBox x:Name="txtNombrex" Text="{Binding Nombrespersona, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True,NotifyOnValidationError=True}" Width="150" Height="25" />-->

        <TextBlock Text="* Apellidos" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="3" Grid.Column="0"/>
        <!--<TextBox x:Name="txtApellidos" Text="{Binding Apellidospersona, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True,NotifyOnValidationError=True}" Width="150" Height="25" IsReadOnly="False"/>-->
        <TextBox Name="txtApellidos"  IsEnabled="{Binding HabilitartxtApellidos}" FontSize="15" Grid.Row="3" Grid.Column="1" Height="25" Controls:TextBoxHelper.ClearTextButton="True">
            <TextBox.Text>
                <Binding Path="Apellidospersona" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                    <Binding.ValidationRules>
                        <local:TextBoxNoVacioValidationRule x:Name="ApellidosValidation"  ValidatesOnTargetUpdated="True" Message="Apellidos Requeridos"/>
                        <local:ExcluirChar x:Name="ApellidoValidation2"  ValidatesOnTargetUpdated="True" Message="Los apellidos contienen caracteres no permitidos."/>
                        <local:ValidacionMenorQue NumeritoMenorIgualQue="30" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="Apellidosvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima de los apellidos es 30"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        
        <!--<TextBlock Grid.Row="4" Grid.Column="0" >Correo electronico:</TextBlock>-->
        <TextBlock Text="* Correo electronico:" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="4" Grid.Column="0"/>
        <!--<TextBox   Grid.Row="3" Grid.Column="1" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}"  Grid.ColumnSpan="2"/>-->
        <TextBox Name="txtCorreo"  Grid.Row="4" Grid.Column="1" Height="30" FontSize="15" Grid.ColumnSpan="2" Controls:TextBoxHelper.ClearTextButton="True"
                 Controls:TextBoxHelper.Watermark="ejemplo@ejemplo.com">
            <TextBox.Text>
                <Binding Path="CorreoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  >
                    <Binding.ValidationRules>
                        <!--<local:ValidacionNIT x:Name="NitpersonaValidation3" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>-->
                        <local:ValidacionMenorQue NumeritoMenorIgualQue="60" NumeritoMayorQue="7" EsRequerido="False"  x:Name="Correovalidation34" ValidatesOnTargetUpdated="True" Message="La longitud del correo electronico es incorrecta. maximo 60 minimo 7"/>
                        <local:ValidacionEmail x:Name="Correovalidation33" ValidatesOnTargetUpdated="True" Message="El correo electronico no es valido. Formato basico es [Aa-Zz@Aa-Zz.dominio]"/>
                        <local:TextBoxNoVacioValidationRule x:Name="correovalidation32" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.ColumnSpan="2" HorizontalAlignment="Center">
            <Button Margin="0,0,5,0" Height="31" Width="110"  x:Name="cmdAceptarDatos" Command="{Binding cmdAceptar_Click}" Content="Validar"  FontSize="14"  ToolTip="Aceptar y enviar estos datos para su comprobacion.">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=Idduipersonax, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtNombrex, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtApellidos, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtCorreo, Path=(Validation.HasError)}" Value="false" />

                                    <!--<Condition Binding="{Binding ElementName=txtContraseña, Path=(Validation.HasError)}" Value="false" />-->
                                    

                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Margin="5,2,0,0" Height="31" Width="110" x:Name="cmdCancelarDatos" Command="{Binding cmdCancelar_Click}" Content="Cancelar"  FontSize="14"  ToolTip="Cancela y sale del sistema" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}"/>
        </StackPanel>
    </Grid>
</UserControl>
