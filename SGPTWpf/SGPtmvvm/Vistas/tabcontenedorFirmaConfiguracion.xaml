<UserControl x:Class="SGPTmvvm.Vistas.tabcontenedorFirmaConfiguracion"
             
                      xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
                      mc:Ignorable="d" 
                      x:Name="root" 
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      Dialog:DialogParticipation.Register="{Binding}"
                      xmlns:helpers="clr-namespace:SGPTWpf.Helpers"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      BorderThickness="1"
                      BorderBrush="{DynamicResource AccentColorBrush}"
                      xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales">

    <Control.Resources>
        <!--Este Style RadioButtonList es para que puedan haber radiobottons bindiados-->
        <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="3" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border BorderThickness="0" Background="Transparent">
                                        <RadioButton 
                                            Focusable="False"
                                            IsHitTestVisible="False"
                                            IsChecked="{TemplateBinding IsSelected}">
                                            <ContentPresenter />
                                        </RadioButton>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ESte DataTemplate junto con el ItemPanelTemplate es para que puedan haber dos columnas o mas en un combobox personalizado-->
        <DataTemplate x:Key="advancedComboxItemDataTemplate">
            <Grid Width="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="A"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--DisplayMemberPath="numerotelefono"-->
                <TextBlock Text="{Binding numerotelefono}" Margin="5" Grid.Column="0" TextAlignment="Left"/>
                <TextBlock Text="{Binding descripciontelefono}" Margin="5" Grid.Column="1" TextAlignment="Left">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Path=IsSelected}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="advancedComboxItemsPanelTemplate">
            <StackPanel Grid.IsSharedSizeScope="True" IsItemsHost="True"/>
        </ItemsPanelTemplate>

        <!--Este conversor es para poder activar o desactivar botones usando el multiDataTrigger-->
        <local:NotNullToBoolConverter x:Key="NotNullToBoolConverter"/>

        <!--Este sirve para darle formato a botones personalizados con imagenes-->
        <Style
            x:Key="BotonEstilo"
            TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style
            x:Key="StackPanelEstilo"
            TargetType="StackPanel">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="2,0" />
        </Style>
    </Control.Resources>
    <Grid Height="Auto" Width="Auto" Margin="0"  >
            <Grid>
                <Grid.RowDefinitions >
                    <RowDefinition MinHeight="50" MaxHeight="60" Height="57" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!--<TabControl Width="900" Background="{DynamicResource AccentColorBrush}" >-->
                <!--Este es el menu de botones-->

                    <Grid
                    VerticalAlignment="Top"
                    HorizontalAlignment="Stretch"
                    Height="55"
                    x:Name="Fondo"
                    Background="Transparent" >
                        <StackPanel Orientation="Horizontal">
                            <TextBox Name="txtBandera" Text="{Binding txtBandera, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                            <Button
                            Style="{StaticResource AccentedSquareButtonStyle}"
                            Command="{Binding cmdNuevoFirma_Click}" IsEnabled="{Binding HabilitarBtnNuevo}"
                            Margin="0,0,0,-0.333" 
                            ToolTip="Permite crear el registro de la firma si aun no existiera">
                                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                    <Rectangle 
            			        Width="45"
            			        Height="25"
            			        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_app_plus}" AutoLayoutContent="True" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Nuevo" />
                                </StackPanel>
                            </Button>
                            <Button
                            Style="{StaticResource AccentedSquareButtonStyle}"
                            Command="{Binding cmdModificarFirma_Click}"
                            IsEnabled="{Binding HabilitarBtnModificar}"
                            ToolTip="Permite editar los datos de la firma">
                                <StackPanel Style="{StaticResource StackPanelEstilo}">
                                    <Rectangle Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Editar" />
                                </StackPanel>
                            </Button>

                            <Button
                            Command="{Binding cmdGuardarFirma_Click}" 

                            ToolTip="Permite guardar los cambios">
                                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                    <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_save}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Guardar" />
                                </StackPanel>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                        <Setter Property="IsEnabled" Value="false" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=txtBandera, Path=Text}" Value="1" />
                                                    <!--Campos Datos Generales-->
                                                    <Condition Binding="{Binding ElementName=txtNombreFirma, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=txtNIT, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=txtCNRC, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=txtPaginaWeb, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=txtNoCVPV, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=txtDireccion, Path=(Validation.HasError)}" Value="false" />

                                                    <Condition Binding="{Binding ElementName=cmbRepresentanteLegal, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                    <Condition Binding="{Binding ElementName=cmbPaises, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                    <Condition Binding="{Binding ElementName=cmbDepartamentos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>

                                                    <!--Campos Configuracion del sistema-->
                                                    <Condition Binding="{Binding ElementName=txtIpConexionx, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=txtPuertoConexion, Path=(Validation.HasError)}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="true" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <!--Cancelar-->
                            <Button
                            Style="{StaticResource AccentedSquareButtonStyle}"
                            Command="{Binding cmdCancelarFirma_Click}" 
                            IsEnabled="{Binding HabilitarBtnCancelar}" >
                                <StackPanel Style="{StaticResource StackPanelEstilo}">
                                    <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_cancel}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Cancelar" />
                                </StackPanel>
                            </Button>
                            <!--Logotipo-->
                            <Button
                            Style="{StaticResource AccentedSquareButtonStyle}"
                            Command="{Binding cmdLogoFirma_Click}" 
                            IsEnabled="{Binding HabilitarBtnLogo}"
                            ToolTip="Permite Agregar/Cambiar el logotipo comercial de la firma">
                                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                    <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_image}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Logotipo" />
                                </StackPanel>
                            </Button>

                        </StackPanel>
                    </Grid>
                <Grid x:Name="datosConsulta" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1"  Margin="0" >
                <Border BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}">
                    <TabControl Grid.Row="1" >
                        <TabControl.Resources>
                            <Style TargetType="TabItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TabItem">
                                            <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Black" CornerRadius="1,7,1,7" Margin="2,0">
                                                <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            Margin="16,0"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <!--<Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />-->
                                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ResourceKey=AccentColorBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="False">
                                                    <!--<Setter TargetName="Border" Property="Background" Value="GhostWhite" />-->
                                                    <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.Resources>


                        <TabItem ToolTip="Datos generales de la firma auditora">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/SGPtmvvm/img/BulletBlueOk.png" Height="25"/>
                                    <TextBlock Text="Datos generales de la firma     " Foreground="Black"  FontWeight="Medium" VerticalAlignment="Center" Margin="0,8,0,12.667"/>
                                </StackPanel>
                            </TabItem.Header>
                            <!--<DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">-->
                            <!--<Frame x:Name="FrameOpcAdmonFirmaConfiguracionFirma" Content="{Binding VistaFirma}" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" NavigationUIVisibility="Hidden" />-->
                            <!--<Image  Name="image111" DockPanel.Dock="Bottom" Source="img/LogoUES.jpg" HorizontalAlignment="Stretch" IsHitTestVisible="False" Height="217" Width="123"/>-->
                            <!--<Grid Background="{DynamicResource AccentColorBrush}">-->
                            <Grid Margin="1">

                                <Border  BorderThickness="1"
					                 Margin="2" CornerRadius="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                                    </Border.BitmapEffect>
                                    <Grid Margin="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="176"/>
                                            <RowDefinition Height="50"/>
                                            <RowDefinition Height="60" />
                                            <RowDefinition Height="60" />
                                            <RowDefinition Height="95" />
                                        </Grid.RowDefinitions>

                                        <TextBlock x:Name="MessageTextBlock" Grid.Row="0" Text="Datos generales de firma auditora" TextWrapping="Wrap" Margin="0" HorizontalAlignment="Center"   Foreground="{DynamicResource AccentColorBrush}" Visibility="Hidden"/>

                                        <Grid Grid.Row="1" Grid.Column="1" Margin="2,2,2,2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition />


                                            </Grid.RowDefinitions>
                                            <Label Grid.Column="0" Grid.Row="0" Content="* Nombre firma: "  HorizontalAlignment="Left" />
                                            <!--<TextBox Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" x:Name="txtNombreFirma" Text="{Binding Razonsocialfirma, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Height="25" IsEnabled="{Binding HabilitartxtNombreFirma}" ToolTip="Razon Social"/>-->

                                            <TextBox x:Name="txtNombreFirma" Height="25"  Grid.Column="1" Grid.ColumnSpan="2"  IsEnabled="{Binding HabilitartxtNombreFirma}" ToolTip="Razon Social">
                                                <Binding Path="Razonsocialfirma" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding.ValidationRules>
                                                        <local:TextBoxNoVacioValidationRule x:Name="RazonSocialValidacion1"  ValidatesOnTargetUpdated="True" Message="Razon Social Requerido"/>
                                                        <local:ExcluirChar x:Name="RazonSocialValidacion2"  NoPermitir="/;[]{}()*-+~^_=!@$%\'&lt;&gt;&quot;" ValidatesOnTargetUpdated="True" Message="La razon social o nombre de la empresa contiene caracteres no permitidos."/>
                                                        <local:ValidacionMenorQue NumeritoMenorIgualQue="50" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="RazonSocialValidacion3" ValidatesOnTargetUpdated="True" Message="Ingrese un nombre de longitud mayor que 3 y menor o igual que 50"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox>

                                            <Label Content="* Rep. Legal: " Grid.Column="4" Grid.Row="0"  HorizontalAlignment="Left" />
                                            <ComboBox  Height="25" Grid.Column="5" Grid.Row="0" x:Name="cmbRepresentanteLegal"
                                                       ItemsSource="{Binding UsuariosListado}"
                                                       DisplayMemberPath="TheUsuariosPersonas.nombreCompleto"
                                                       SelectedItem="{Binding SelectedRepresentanteLegal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       Margin="1" IsEnabled="{Binding HabilitarRepresentanteLegal}" ToolTip="Representante legal de la firma"/>
                                            <Label  Grid.Column="0" Grid.Row="1" Content="* No. NIT: "  HorizontalAlignment="Left"/>
                                            <!--<TextBox Grid.Column="1" Grid.Row="1"   x:Name="txtNoCVPV" Text="{Binding Numerocvpafirma, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="25" IsEnabled="{Binding HabilitartxtNoCVPV}" />-->
                                            <TextBox Name="txtNIT" IsEnabled="{Binding HabilitartxtNIT}" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Height="25">
                                                <TextBox.Text>
                                                    <Binding Path="Nitfirma" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                        <Binding.ValidationRules>
                                                            <local:ValidacionNIT x:Name="NitFirmaValidation3" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>
                                                            <local:ValidacionMenorQue NumeritoMenorIgualQue="17" NumeritoMayorQue="16" EsRequerido="False"  x:Name="Nitpersonavalidation4" ValidatesOnTargetUpdated="True" Message="Excede de 17 caracteres permitidos"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>


                                            <Label  Grid.Column="4" Grid.Row="1" Content="* No. NRC: "  HorizontalAlignment="Left"/>
                                            <!--<TextBox Grid.Column="1" Grid.Row="1"   x:Name="txtNoCVPV" Text="{Binding Numerocvpafirma, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="25" IsEnabled="{Binding HabilitartxtNoCVPV}" />-->
                                            <TextBox Name="txtCNRC"  Grid.Column="5" Grid.Row="1"  Grid.ColumnSpan="1" Height="25" IsEnabled="{Binding HabilitarNRC}" ToolTip="Numero de registro de contribuyente (NRC)">
                                                <TextBox.Text>
                                                    <Binding Path="Nrcfirma" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                        <Binding.ValidationRules>
                                                            <!--<local:ValidacionSoloDigitos x:Name="NumeroNRCvalidation3"  ValidatesOnTargetUpdated="True" Message="Inserte un numero CVPA valido de 4 digitos [9999]."/>-->
                                                            <local:ExcluirChar x:Name="NRCValidacion2"  NoPermitir="abcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ/;[]{}()*+~^_=!@$%\'&lt;&gt;&quot;" ValidatesOnTargetUpdated="True" Message="NRC contiene caracteres no permitidos."/>
                                                            <local:ValidacionMenorQue NumeritoMenorIgualQue="9" NumeritoMayorIgualQue="1" EsRequerido="False"  x:Name="NumeroNRCvalidation4" ValidatesOnTargetUpdated="True" Message="Ingrese un numero mayor que 0 y de hasta 9999"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>

                                            <Label Content=" Pagina Web: " Grid.Column="0" Grid.Row="2"  HorizontalAlignment="Left" />
                                            <!--<TextBox Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="2" x:Name="txtPaginaWeb" Text="{Binding Urlfirma}" Height="25" IsEnabled="{Binding HabilitarPaginaWeb}"  />-->
                                            <TextBox Name="txtPaginaWeb" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Height="25" IsEnabled="{Binding HabilitarPaginaWeb}">
                                                <TextBox.Text>
                                                    <Binding Path="Urlfirma" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                        <Binding.ValidationRules>
                                                            <local:ValidacionMenorQue NumeritoMayorIgualQue="1" NumeritoMenorIgualQue="100" EsRequerido="False"  x:Name="PaginaWebvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud de la URL sobrepasa el limite permitido. maximo 100 Caracteres"/>
                                                            <!--<local:ExcluirChar  NoPermitir=";[]{}()*+~^_=!$%\'&lt;&gt;" x:Name="PaginaWebValidacion1" ValidatesOnTargetUpdated="True" Message="La URL contiene caracteres no permitidos"/>-->
                                                            <local:ValidacionURL EsRequerido="False" ValidatesOnTargetUpdated="True" Message="La URL no es valida"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>

                                            <Label  Grid.Column="4" Grid.Row="2" Content="No. CVPA: "  HorizontalAlignment="Left"/>
                                            <!--<TextBox Grid.Column="1" Grid.Row="1"   x:Name="txtNoCVPV" Text="{Binding Numerocvpafirma, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="25" IsEnabled="{Binding HabilitartxtNoCVPV}" />-->
                                            <TextBox Name="txtNoCVPV"  Grid.Column="5" Grid.Row="2" Grid.ColumnSpan="2" Height="25" IsEnabled="{Binding HabilitartxtNoCVPV}" ToolTip="Numero de inscripcion en el Concejo de Vigilancia de la Contaduria Publica (CVCP)">
                                                <TextBox.Text>
                                                    <Binding Path="Numerocvpafirma" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                        <Binding.ValidationRules>
                                                            <local:ValidacionSoloDigitos x:Name="Numerocvpausuariovalidation3"  ValidatesOnTargetUpdated="True" Message="Inserte un numero CVPA valido de 4 digitos [9999]."/>
                                                            <local:ValidacionMenorQue NumeritoMenorIgualQue="4" NumeritoMayorIgualQue="1" EsRequerido="False"  x:Name="Numerocvpausuariovalidation4" ValidatesOnTargetUpdated="True" Message="Ingrese un numero mayor que 0 y de hasta 9999"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>


                                            <!--nombreCompleto-->
                                            <!--<TextBox Grid.Column="2" Grid.Row="2"  x:Name="txtRepLegal" Text="{Binding Representantefirma}" Height="25" IsReadOnly="True"  />-->

                                            <Label Grid.Column="0" Grid.Row="3" Content="* País: "  HorizontalAlignment="Left"  />
                                            <ComboBox  Height="25" Grid.Column="1" Grid.Row="3" x:Name="cmbPaises"
                                                       ItemsSource="{Binding ListadoPaises, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="nombrepais"
                                                       SelectedItem="{Binding SelectedPais, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       Margin="1" IsEnabled="{Binding HabilitarComboPaises}"/>

                                            <Label Grid.Column="2" Grid.Row="3" Content="* Departamento: "  HorizontalAlignment="Left"  />
                                            <ComboBox  Height="25" Grid.Column="3" Grid.Row="3" x:Name="cmbDepartamentos"
                                                       ItemsSource="{Binding ListadoDepartamentos , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="nombredepartamento" 
                                                       SelectedItem="{Binding SelectedDepartamento, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       Margin="1" IsEnabled="{Binding HabilitarDepartamento}"/>

                                            <Label Grid.Column="4" Grid.Row="3" Content="* Municipio: "  HorizontalAlignment="Left"  />
                                            <ComboBox  Height="25" Grid.Column="5" Grid.Row="3"
                                                       ItemsSource="{Binding ListadoMunicipios , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="nombremunicipio" 
                                                       SelectedItem="{Binding SelectedMunicipio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       Margin="1" IsEnabled="{Binding HabilitarMunicipio}" />

                                            <Label Content="* Dirección: " Grid.Column="0" Grid.Row="4"  HorizontalAlignment="Left" />
                                            <!--<TextBox Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="2" x:Name="txtDireccion" Text="{Binding Direccionfirma}" Height="25" IsEnabled="{Binding HabilitarDireccion}" />-->
                                            <TextBox Name="txtDireccion" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3" Height="25" IsEnabled="{Binding HabilitarDireccion}">
                                                <TextBox.Text>
                                                    <Binding Path="Direccionfirma" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                        <Binding.ValidationRules>
                                                            <local:ValidacionMenorQue NumeritoMayorIgualQue="5" NumeritoMenorIgualQue="50" EsRequerido="False"  x:Name="Direccionpersonavalidation4" ValidatesOnTargetUpdated="True" Message="La longitud de la direccion es incorrecta. maximo 50 Caracteres"/>
                                                            <local:ExcluirChar  NoPermitir="/;[]{}()*-+~^_=!@$%\'&lt;&gt;&amp;" x:Name="DireccionpersonaValidacion1" ValidatesOnTargetUpdated="True" Message="La direccion contiene caracteres no permitidos"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>

                                            <Label Content=" Fecha CVPA: " Grid.Column="4" Grid.Row="4"  HorizontalAlignment="Left" />
                                            <DatePicker Grid.Column="5" Grid.Row="5" x:Name="dpickFechaCVPA" IsEnabled="{Binding HabilitardpickFechaCVPA}"
                                            DisplayDate="{Binding DateTime.Now()}" 
                                            Focusable="False" 
                                            SelectedDate="{Binding Fechainscripcioncvpafirma, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    
                                            Height="25"/>
                                            <!--<DatePicker Grid.Column="5" Grid.Row="4"/>-->


                                        </Grid>
                                        <Border Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="6"  BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1,1,1,1" Background="Transparent" />
                                        <Border Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="6"  Grid.RowSpan="3" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1,1,1,1" Background="Transparent" />

                                        <StackPanel Orientation="Horizontal" Margin="0,3" x:Name="GridTelefonos" Grid.Column="0" Grid.Row="2"   HorizontalAlignment="Stretch"   IsEnabled="{Binding HabilitarTelefonos}">
                                            <!--<Border BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}">-->
                                            <Label Content="Teléfono"  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="20,0,5,0" />
                                            <TextBox x:Name="txtTelef" Width="150" Height="40"  Margin="5,0,0,0" >
                                                <Binding Path="TelefonoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding.ValidationRules>
                                                        <!--<local:ValidacionNIT x:Name="NitpersonaValidation3" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>-->
                                                        <local:ValidacionMenorQue NumeritoMenorIgualQue="9" NumeritoMayorIgualQue="8" EsRequerido="False"  x:Name="Telefonovalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del telefono permitida son 9 digitos incluyendo separador."/>
                                                        <local:ValidacionTelefono x:Name="Telefonovalidation2" ValidatesOnTargetUpdated="True" Message="Ingrese un telefono con formato [7777-9999]. los telefonos solo pueden comenzar con 2,7,8 y 9"/>
                                                        <local:TextBoxNoVacioValidationRule x:Name="TelefonoValidacion1" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox>
                                            <Label Content="Tipo teléfono"  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="15,0,5,0" />
                                            <ComboBox  Width="150" Height="40"  Margin="5,0,0,0"
                                                       ItemsSource="{Binding ListadoTipoTelefono, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       DisplayMemberPath="descripciontt" 
                                                       SelectedValuePath="idtt" 
                                                       SelectedItem="{Binding SelectedTipoTelefono, Mode=TwoWay}" IsReadOnly="False" />
                                            <Button  Height="40" Width="130" Margin="20,0,5,0"
                                    	x:Name="cmdAgreTelef" 
                                    	Command="{Binding cmdAgreTelef_Click}" 
                                    	 
                                    	ToolTip="Agregar correo electronico" Opacity="0.9"   HorizontalAlignment="Left" >
                                                <StackPanel Orientation="Horizontal" Width="120">
                                                    <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                        <Rectangle 
                                                        Width="40"
                                                        Height="30"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_thumb_up_add}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                        <Canvas>
                                                            <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                        </Canvas>
                                                        <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                    </StackPanel>
                                                    <TextBlock Margin="1" Width="55"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Agregar" />
                                                </StackPanel>
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                        <Setter Property="IsEnabled" Value="false" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtTelef}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsEnabled" Value="true" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                            <ComboBox Height="40" Width="190" x:Name="cmbTelefonos" ItemsSource="{Binding ListadoTelefonos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                      SelectedItem="{Binding SelectedTelefonoAgregado, Mode=TwoWay}"
                                                      Margin="15,0,5,0" 
                                                      ItemTemplate="{StaticResource advancedComboxItemDataTemplate}"
                                                      ItemsPanel="{StaticResource advancedComboxItemsPanelTemplate}"/>

                                            <!--<control:MvvmBotonEliminarTelefono HorizontalAlignment="Center" Margin="30,0,0,0"/>-->
                                            <Button Height="40" Width="125"
                                        Command="{Binding BorrarTelefonoCommand, Mode=TwoWay}" Margin="10,0,5,0"   >
                                                <StackPanel Orientation="Horizontal" Width="120">
                                                    <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                        <Rectangle 
                                                        Width="30"
                                                        Height="27"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_phone}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                        <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                    </StackPanel>
                                                    <TextBlock Margin="1"  Width="75"   TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Center"  Text="Eliminar" />
                                                </StackPanel>
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                        <Setter Property="IsEnabled" Value="false" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding ElementName=cmbTelefonos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsEnabled" Value="true" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                        </StackPanel>



                                        <Grid Grid.Column="0" Grid.Row="3" Grid.RowSpan="3"  IsEnabled="{Binding HabilitarCorreos}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="50"/>
                                                <ColumnDefinition Width="135"/>
                                                <ColumnDefinition Width="85"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition  Width="120"/>
                                                <ColumnDefinition Width="83"/>
                                                <ColumnDefinition Width="95"/>
                                                <ColumnDefinition Width="130"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition />
                                                <RowDefinition Height="39"/>
                                                <RowDefinition Height="12"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="6"  Grid.RowSpan="6" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1,1,1,1" Background="Transparent"/>
                                            <Border Grid.Column="6" Grid.Row="0" Grid.ColumnSpan="3"  Grid.RowSpan="6" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1,1,1,1" Background="Transparent"/>

                                            <Label Grid.Column="0" Grid.Row="0" Content="E-mail:"  HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                            <TextBox Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" x:Name="txtCorreo"   Height="30"  ToolTip="Correo verdadero que sera verificado por el sistema">
                                                <Binding Path="CorreoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  >
                                                    <Binding.ValidationRules>
                                                        <local:ValidacionMenorQue NumeritoMenorIgualQue="60" NumeritoMayorQue="7" EsRequerido="False"  x:Name="Correovalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del correo electronico es incorrecta. maximo 60 minimo 7"/>
                                                        <local:ValidacionEmail x:Name="Correovalidation3" ValidatesOnTargetUpdated="True" Message="El correo electronico no es valido. Formato basico es [Aa-Zz@Aa-Zz.dominio]"/>
                                                        <local:TextBoxNoVacioValidationRule x:Name="correovalidation2" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox>
                                            <Label Grid.Column="3" Grid.Row="0" Content="Contraseña:"  HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                            <TextBox Grid.Column="4" Grid.Row="0"  x:Name="txtContrasenia"   Height="30"  ToolTip="Contraseña real del correo introducido. Necesaria para notificar y enviar correos.">
                                                <Binding Path="ContraseniaCorreoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  >
                                                    <Binding.ValidationRules>
                                                        <local:ValidacionMenorQue NumeritoMenorIgualQue="30"  NumeritoMayorIgualQue="3" EsRequerido="False"  x:Name="Contraseniavalidation4" ValidatesOnTargetUpdated="True" Message="La longitud de contraseña es: maximo 30 minimo 7"/>
                                                        <local:TextBoxNoVacioValidationRule x:Name="contraseniavalidation1" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox>

                                            <!--<TextBlock Grid.Column="3" Grid.Row="0" Text="{Binding LeyendasValidacionesCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Center"  Foreground="{Binding colorValidacionesCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                                            <CheckBox Grid.Column="5" Grid.Row="0" Content="Es Principal" IsChecked="{Binding CorreoPrincipalChek}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3.667,6,2.667,6.667" Height="30"/>

                                            <Label Grid.Column="2"  Grid.ColumnSpan="4" Grid.Row="1" Content="Configuraciones técnicas del servidor de correos"  FontWeight="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource AccentColorBrush}" Margin="31.667,2.333,32,6.667"/>

                                            <Label Grid.Column="3" Grid.Row="2" Content="Seguridad:"  HorizontalAlignment="Right" VerticalAlignment="Center"  Margin="0,2,5,0" Grid.RowSpan="2" />
                                            <CheckBox Grid.Column="4"  Grid.Row="2" Grid.ColumnSpan="2" Content="Requiere autenticación SSL?" IsChecked="{Binding SSLRequeridoChek}" VerticalAlignment="Center" HorizontalAlignment="Center"  Height="24" Margin="0,27.333,6,25.333" Grid.RowSpan="2"/>

                                            <Label Grid.Column="3" Grid.Row="3" Content="Puerto:"  HorizontalAlignment="Right" VerticalAlignment="Center"  Margin="10,2,5,20" Grid.RowSpan="2" />
                                            <TextBox Grid.Column="4"  Grid.ColumnSpan="2" Grid.Row="3"  x:Name="txtPuertox"   Height="30"   ToolTip="Puerto de escucha del cliente SMTP. Si no comprende, deje su valor como esta." Margin="0,13.333,3,34" Grid.RowSpan="2"    >
                                                <Binding Path="PuertoCorreoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  >
                                                    <Binding.ValidationRules>
                                                        <local:ValidacionMenorQue NumeritoMenorIgualQue="5" NumeritoMayorQue="1" EsRequerido="False"  x:Name="Puertovalidation4" ValidatesOnTargetUpdated="True" Message="Longitud maximo 5 minimo 2"/>
                                                        <local:ValidacionSoloDigitos x:Name="PuertoValidacion1" ValidatesOnTargetUpdated="True" Message="Solo se permiten numeros"/>
                                                        <local:TextBoxNoVacioValidationRule x:Name="puertoValidation2" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox>

                                            <!--<Label Grid.Column="2" Grid.Row="2" Content="Host comunes" textwrapping=""  FontSize="13" HorizontalAlignment="Left"  Width="94"/>-->
                                            <Label Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1"  HorizontalAlignment="Right"    Margin="49.667,35.333,5,2.667" Grid.RowSpan="2">
                                                <Label.Content>
                                                    <AccessText TextWrapping="Wrap" Text="Sevidores de correos comunes:"/>
                                                </Label.Content>
                                            </Label>
                                            <ComboBox  Height="30" Grid.Column="4" Grid.ColumnSpan="2" Grid.Row="1"
                                                       ToolTip="Le ayuda a insertar las configuraciones para los servidores de correos mas comunes"
                                                       ItemsSource="{Binding ListadoServidoresComunesCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="nombreservidorcorreo"
                                                       SelectedItem="{Binding SelectedServidoresComunes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       Margin="0.333,33.333,3,12.667" IsEnabled="{Binding HabilitarComboComunest}" Grid.RowSpan="2" />

                                            <Label Grid.Column="3" Grid.Row="4" Content="Host: "  HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,3" />
                                            <TextBox Grid.Column="4" Grid.Row="4"  x:Name="txtHost"   Height="30"  ToolTip="Esta opcion permite configurar un servidor SMTP de correos empresarial o propio. Si no comprende, utilice uno conocido del listado." Margin="0,6.667,3,2" Grid.ColumnSpan="2" >
                                                <Binding Path="HostCorreosT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  >
                                                    <Binding.ValidationRules>
                                                        <local:ValidacionMenorQue NumeritoMenorIgualQue="30" NumeritoMayorQue="7" EsRequerido="False"  x:Name="Hostvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del host es maximo 30 minimo 7"/>
                                                        <local:TextBoxNoVacioValidationRule x:Name="Hostvalidation1" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox>


                                            <ListBox x:Name="lstCorreos"  Grid.Column="6" Grid.ColumnSpan="2"  Grid.RowSpan="4"
                                        		ItemsSource="{Binding ListadoCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                        		DisplayMemberPath="direccioncorreo" 
                                        		SelectedItem="{Binding SelectedCorreoAgregado, Mode=TwoWay}" Margin="2"/>
                                            <!--<TextBlock Grid.Column="6" Grid.Row="4" Text="{Binding LeyendasValidacionesCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Center"  Foreground="{Binding colorValidacionesCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                                            <!--<TextBlock Grid.Column="6" Grid.Row="4" Text="{Binding LeyendasValidacionesCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" HorizontalAlignment="Center" />-->
                                            <TextBox Grid.Column="6" Grid.Row="4"  x:Name="txtLeyenda"   Height="30"  HorizontalAlignment="Center"  ToolTip="Esta opcion permite configurar un servidor SMTP de correos empresarial o propio. Si no comprende, utilice uno conocido del listado."  Grid.ColumnSpan="2" >
                                                <Binding Path="LeyendasValidacionesCorreos" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  />
                                            </TextBox>

                                            <Button  Grid.Column="8" Grid.Row="0" Height="40" x:Name="cmdAgreCorreos" Visibility="{Binding btnAgregarCorreoVisible}" Command="{Binding cmdAgreCorreos_Click}"  ToolTip="Agregar correo electronico" Opacity="0.9" Margin="0,0,2,0" >
                                                <StackPanel Orientation="Horizontal" Width="120">
                                                    <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                        <Rectangle 
                                                        Width="30"
                                                        Height="27"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_thumb_up_add}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                        <Canvas>
                                                            <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                        </Canvas>
                                                        <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                    </StackPanel>
                                                    <TextBlock Margin="1" Width="75"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Agregar" />
                                                </StackPanel>
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                        <Setter Property="IsEnabled" Value="false" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtCorreo}" Value="false" />
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtContrasenia}" Value="false" />
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtPuertox}" Value="false" />
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtHost}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsEnabled" Value="true" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button  Grid.Column="8" Grid.Row="0" Height="40" x:Name="cmdModifCorreos" Visibility="{Binding btnModificarCorreoVisible}" 
                                             Command="{Binding cmdModiCorreos_Click}"  ToolTip="Modificar un correo electronico" 
                                             Opacity="0.9" Style="{StaticResource AccentedSquareButtonStyle}"
                                             Margin="0,0,2,0">
                                                <StackPanel Orientation="Horizontal" Width="120">
                                                    <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                        <Rectangle 
                                                        Width="30"
                                                        Height="27"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                        <Canvas>
                                                            <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                        </Canvas>
                                                        <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                    </StackPanel>
                                                    <TextBlock Margin="1" Width="75"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Modificar" />
                                                </StackPanel>
                                            </Button>

                                            <Button  Grid.Column="8" Grid.Row="0" Height="40" x:Name="cmdGuardCorreos2" 
                                             Visibility="{Binding btnGuardarCorreoVisible}" 
                                             Command="{Binding cmdGuardarModifCorreos_Click}"  ToolTip="Guardar modificaciones al correo electronico" Opacity="0.9" 
                                             Margin="0,0,2,0">
                                                <StackPanel Orientation="Horizontal" Width="120">
                                                    <StackPanel Style="{StaticResource StackPanelEstilo}">
                                                        <Rectangle 
                                                        Width="30"
                                                        Height="27"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_save}"/>
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                        <Canvas>
                                                            <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                        </Canvas>
                                                        <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                    </StackPanel>
                                                    <TextBlock Margin="1" Width="75"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Guardar" />
                                                </StackPanel>
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                        <Setter Property="IsEnabled" Value="false" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtCorreo}" Value="false" />
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtContrasenia}" Value="false" />
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtPuertox}" Value="false" />
                                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtHost}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsEnabled" Value="true" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button  Grid.Column="8" Grid.Row="2" Height="40" x:Name="cmdCancelModifCorreos" Margin="0,0,2,0"
                                             Visibility="{Binding btnCancelModificarCorreoVisible}" 
                                             IsEnabled="{Binding btnCancelModificarCorreoActivado}"
                                             Command="{Binding cmdCancelModiCorreos_Click}" 
                                                
                                             ToolTip="Cancela la Modificacion del correo electronico" Opacity="0.9" 
                                             Style="{StaticResource AccentedSquareButtonStyle}">
                                                <StackPanel Orientation="Horizontal" Width="120">
                                                    <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                        <Rectangle 
                                                        Width="30"
                                                        Height="27"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_cancel}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                        <Canvas>
                                                            <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                        </Canvas>
                                                        <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                    </StackPanel>
                                                    <TextBlock Margin="1" Width="75"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Cancelar" />
                                                </StackPanel>
                                            </Button>

                                            <!--Visibility="{Binding btnQuitCorreosVisible}" 
                                            IsEnabled="{Binding btnQuitCorreosHabilitado}"-->
                                            <Button x:Name="cmdQuitCorreos" Grid.Column="8" Grid.Row="1" HorizontalAlignment="Center" Height="40"  
                                            
                                            Command="{Binding cmdQuitCorreos_Click}" 
                                            ToolTip="Elimina un correo del listado" Margin="0,0,2,0" >
                                                <StackPanel Orientation="Horizontal" Width="120">
                                                    <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                        <Rectangle 
                                                        Width="30"
                                                        Height="27"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_email_minimal}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                        <Canvas>
                                                            <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                        </Canvas>
                                                        <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                    </StackPanel>
                                                    <TextBlock Margin="1"  Width="75"   TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Eliminar" />
                                                </StackPanel>
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                        <Setter Property="IsEnabled" Value="false" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding ElementName=lstCorreos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsEnabled" Value="true" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <!--<Button Content="Quitar"  x:Name="cmdQuitCorreos"   Grid.Column="8" Grid.Row="1" HorizontalAlignment="Center" Height="40"  Visibility="{Binding btnQuitCorreosVisible}" Command="{Binding cmdQuitCorreos_Click}" ToolTip="Elimina un correo del listado" Margin="0,0,0,0" VerticalAlignment="Top" Width="120" Template="{DynamicResource btnEliminarCorreo}" BorderBrush="{DynamicResource AccentColorBrush}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=lstCorreos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>-->


                                            <Button  Grid.Column="8" Grid.Row="3" Height="40" x:Name="cmdConfirmaCorreos"  Margin="0,0,2,0"
                                             Command="{Binding cmdconfirmarCorreos_Click}"  ToolTip="Confirmar correo electronico" Opacity="0.9" >
                                                <StackPanel Orientation="Horizontal" Width="120">
                                                    <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                        <Rectangle 
                                                        Width="30"
                                                        Height="27"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_thumbs_up}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                        <Canvas>
                                                            <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                        </Canvas>
                                                        <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                    </StackPanel>
                                                    <TextBlock Margin="1"  Width="75"   TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Confirmar" />
                                                </StackPanel>
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                        <Setter Property="IsEnabled" Value="false" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding ElementName=lstCorreos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsEnabled" Value="true" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                            <Image  Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="3" Source="{Binding MyImagenFirma.Source}" Margin="5"/>
                                            <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" Content="Logotipo"  HorizontalAlignment="Center" VerticalAlignment="Top"/>
                                        </Grid>
                                    </Grid>

                                </Border>

                            </Grid>
                            <!--</DockPanel>-->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding Path=MiComanditoFirma}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TabItem>

                        <!--********************************************Parte de Sistema******************************************************-->
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/SGPTmvvm/img/BulletRedOk.png" Height="25"/>
                                    <TextBlock Text="  Configuración del sistema     "   FontWeight="Medium" VerticalAlignment="Center" Margin="0,8,0,12.667"/>
                                </StackPanel>
                            </TabItem.Header>
                            <!--<DockPanel Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="566" Margin="0,0,-981.667,0">-->
                            <!--<Frame x:Name="FrameOpcAdmonFirmaConfiguracionSistema" Content="{Binding VistaSistema}" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" NavigationUIVisibility="Hidden" />-->
                            <!--<Image  Name="image11" DockPanel.Dock="Bottom" Source="img/LogoUES.jpg" HorizontalAlignment="Center" Height="300" Width="250" Stretch="UniformToFill"/>-->
                            <!--<Border Background="{StaticResource ResourceKey=LightDullBrush}" Visibility="{Binding Visibilityy}" Width="750" Height="470" >
                            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="3"
					                 Margin="2,2,2,2" Width="740" Height="460">-->

                            <Grid Margin="1" >
                                <!--<Border  Visibility="{Binding Visibilityy}" Width="560" Margin="20,5,0,182" CornerRadius="20,0,20,0">-->
                                <!--<Border BorderBrush="{DynamicResource  ResourceKey=AccentColorBrush}" BorderThickness="3" 
					                CornerRadius="20,0,20,0" VerticalAlignment="Stretch"
					                HorizontalAlignment="Left" Width="650">-->
                                <Border BorderThickness="1" 
					                CornerRadius="0,0,0,0" VerticalAlignment="Stretch"
					                HorizontalAlignment="Left" Width="Auto">

                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect Color="Black" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                                    </Border.BitmapEffect>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="45*"/>
                                            <RowDefinition Height="250*"/>
                                            <RowDefinition Height="60*"/>


                                        </Grid.RowDefinitions>

                                        <TextBlock x:Name="MessageTextBlock2" Grid.Row="0" Text="Configuraciones del sistema" TextWrapping="Wrap" Margin="133,16,133.001,0.333" HorizontalAlignment="Center" FontSize="20"  Foreground="{DynamicResource  ResourceKey=AccentColorBrush}"/>

                                        <Grid Grid.Row="1" Grid.Column="1" Margin="1,5,20,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <!--<RowDefinition/>-->
                                                <!--<RowDefinition/>-->

                                            </Grid.RowDefinitions>
                                            <Label Grid.Column="0" Grid.Row="0" Content="* Ip Servidor: "  HorizontalAlignment="Right" />
                                            <!--<TextBox Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" x:Name="txtIpServidor" Text="{Binding Idduipersona, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Height="25" IsReadOnly="False" ToolTip="Razon Social"/>-->
                                            <TextBox x:Name="txtIpConexionx" Height="25"  Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2"  ToolTip="La Ip del servidor con la cual se sincronizaran los datos centralizados de la auditoria en general.">
                                                <Binding Path="Ipconexion" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding.ValidationRules>
                                                        <local:TextBoxNoVacioValidationRule x:Name="ValidaciondelaIP5" ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                                        <!--<local:ValidacionIP x:Name="VAlidaciondelaIP7" ValidatesOnTargetUpdated="True" />-->
                                                        <local:ExcluirChar x:Name="IpServidorValidacion2"  NoPermitir="/;,[]{}()*+~^_=!@$%\'&lt;&gt;&quot;" ValidatesOnTargetUpdated="True" Message="La IP contiene caracteres no permitidos."/>
                                                        <local:ValidacionMenorQue NumeritoMenorIgualQue="64" NumeritoMayorIgualQue="7" EsRequerido="True"  x:Name="IpServidorValidacion3" ValidatesOnTargetUpdated="True" Message="Ingrese una IP de longitud mayor que 7 y menor o igual que 19"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox>


                                            <Label  Grid.Column="0" Grid.Row="1" Content="Tipo IP "  HorizontalAlignment="Right"/>
                                            <ListBox Grid.Column="1" Grid.Row="1" Style="{StaticResource RadioButtonList}" SelectedValuePath="Tag" SelectedValue="{Binding Path=TipoIP}">
                                                <ListBoxItem Tag="IpLocal">IP Local</ListBoxItem>
                                                <ListBoxItem Tag="IpPublica">IP Publica</ListBoxItem>
                                            </ListBox>

                                            <TextBlock x:Name="MessageEstadoIP" Grid.Row="1" Grid.Column="2" Text="{Binding EstadoActualIPServidor, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Margin="1" HorizontalAlignment="Center"   Foreground="{DynamicResource  ResourceKey=AccentColorBrush}"/>
                                            <!--<TextBox Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" x:Name="txtTipoIp" Text="{Binding tipoIP, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Height="25" IsReadOnly="True" />-->

                                            <Label Content=" Protocolo: " Grid.Column="0" Grid.Row="2"  HorizontalAlignment="Right" />
                                            <ListBox Grid.Column="1" Grid.Row="2" Style="{StaticResource RadioButtonList}" SelectedValuePath="Tag" SelectedValue="{Binding Path=TipoProtocolo}">
                                                <ListBoxItem Tag="Ipv4">IPv4 (32 bits)</ListBoxItem>
                                                <ListBoxItem Tag="Ipv6">IPv6 (128 bits)</ListBoxItem>
                                            </ListBox>


                                            <Label  Grid.Column="0" Grid.Row="3" Content="Puerto: "  HorizontalAlignment="Right"/>
                                            <!--<TextBox Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="1"  x:Name="txtPuerto" Text="{Binding Puerto}" Height="25" IsReadOnly="False" />-->
                                            <TextBox x:Name="txtPuertoConexion" Height="25"  Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="2"  ToolTip="Puerto">
                                                <Binding Path="Puertoconexion" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding.ValidationRules>
                                                        <local:TextBoxNoVacioValidationRule x:Name="TXTPUERTOValidacion1"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                                        <local:ValidacionSoloDigitos x:Name="txtPuertoConexionValidacion7" ValidatesOnTargetUpdated="True" Message="Solo se permiten numeros"/>
                                                        <!--<local:ExcluirChar x:Name="txtPuertoValidacion2"  NoPermitir="/;,[]{}()*-+~^_-=!@$%\'&lt;&gt;&quot;" ValidatesOnTargetUpdated="True" Message="La IP contiene caracteres no permitidos."/>-->
                                                        <local:ValidacionMenorQue NumeritoMenorIgualQue="8" NumeritoMayorIgualQue="1" EsRequerido="True"  x:Name="txtPuertoValidacion3" ValidatesOnTargetUpdated="True" Message="Ingrese un nombre de longitud mayor que 1 y menor o igual que 8"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox>

                                            <Label  Grid.Column="0" Grid.Row="4" Content="Conexión Principal: "  HorizontalAlignment="Right"/>
                                            <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="4">
                                                <CheckBox Margin="10,10,-0.333,10" x:Name="myCheckBox" IsChecked="{Binding EsConexionPrincipal, Mode=TwoWay}" >¿ Es principal ?</CheckBox>
                                                <!--<Label Content="{Binding ElementName=window1, Path=IsCheckBoxChecked}" ContentStringFormat="Es Conexion Principal? {0}"></Label>-->
                                            </StackPanel>
                                            <!--<Grid Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="3">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Button  x:Name="cmdPrimero" Grid.Column="0"  Command="{Binding cmdQuitTelefono_Click}" Margin="39.333,1,2,1">
                                                    <Image Source="/SGPTmvvm;component/img/Principio.png"/>
                                                </Button>
                                                <Button  x:Name="cmdAnterior" Grid.Column="1"  Command="{Binding cmdQuitTelefono_Click}" Margin="39.333,1,2,1">
                                                    <Image Source="/SGPTmvvm;component/img/Anterior.png"/>
                                                </Button>
                                                <Button  x:Name="cmdSiguiente" Grid.Column="2"  Command="{Binding cmdQuitTelefono_Click}" Margin="39.333,1,2,1" >
                                                    <Image Source="/SGPTmvvm;component/img/Siguiente2.png"/>
                                                </Button>
                                                <Button  x:Name="cmdUltimo" Grid.Column="3"  Command="{Binding cmdQuitTelefono_Click}" Margin="39.333,1,2,1">
                                                    <Image Source="/SGPTmvvm;component/img/Final.png"/>
                                                </Button>
                                            </Grid>-->

                                            <!--<CheckBox Grid.Column="1" Grid.Row="4" Margin="10"/>-->
                                            <!--<Label Content=" Sincronizacion Manual: " Grid.Column="0" Grid.Row="4"  HorizontalAlignment="Right" />-->

                                        </Grid>


                                        <UniformGrid Grid.Column="2" Grid.Row="2" Margin="5" Columns="2" HorizontalAlignment="Center"
								            VerticalAlignment="Stretch">

                                            <!--<Button Grid.Column="4" x:Name="cmdGuardarConfSistema"  Content="   Guardar   " Margin="5"   ToolTip="Guarda las modificaciones" Opacity="0.9" Command="{Binding cmdGuardarConfSistema}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=txtIpConexionx, Path=(Validation.HasError)}" Value="false" />
                                                            <Condition Binding="{Binding ElementName=txtPuertoConexion, Path=(Validation.HasError)}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="cmdCancelarConfSistema"  Content="Cancelar" Margin="5,5,5,5.333"   ToolTip="Cancela la modificacion" Opacity="0.9" Style="{StaticResource AccentedSquareButtonStyle}" BorderBrush="{DynamicResource AccentColorBrush}" Command="{Binding cmdCancelar_Click}" IsEnabled="False"/>-->


                                        </UniformGrid>
                                        <Canvas>
                                            <!--<Rectangle Height="238" Width="500" Stroke="Gray" StrokeThickness="2" Canvas.Left="39" Canvas.Top="52"  />-->
                                        </Canvas>
                                        <!--<Canvas>
                                            <Rectangle Height="153" Width="518" Stroke="Gray" StrokeThickness="2" Canvas.Left="13" Canvas.Top="130"  />
                                        </Canvas>-->
                                    </Grid>

                                </Border>
                                <!--</Border>-->
                            </Grid>
                            <!--</DockPanel>-->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding Path=MiComanditoSistema}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TabItem>

                        <!--********************************************Parte de Backup******************************************************-->
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/SGPTmvvm/img/BulletRedOk.png" Height="25"/>
                                    <TextBlock Text="Backup y Restauracion"   FontWeight="Medium" VerticalAlignment="Center" Margin="0,8,0,12.667" />
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction Command="{Binding Path=MiComanditoBackap}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </StackPanel>
                            </TabItem.Header>

                            <Grid Margin="1" >
                                <Border BorderThickness="1" 
					                CornerRadius="0,0,0,0" VerticalAlignment="Stretch" 
					                >

                                    <!--<Border.BitmapEffect>
                                <DropShadowBitmapEffect Color="AliceBlue"/>
                            </Border.BitmapEffect>-->
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="28*"/>
                                            <RowDefinition Height="390*"/>

                                        </Grid.RowDefinitions>

                                        <TextBlock x:Name="MessageTextBlock3" Grid.Row="0" Text="Copia y restauracion de base de datos" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" Foreground="{DynamicResource  ResourceKey=AccentColorBrush}" />

                                        <Grid Grid.Row="1" Grid.Column="1" Margin="1,5,10,5">

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="150"/>
                                                <RowDefinition Height="230"/>

                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>

                                            </Grid.ColumnDefinitions>

                                            <GroupBox Header="Crear Backup" HorizontalAlignment="Stretch"  Margin="3,0,3,0" BorderThickness="1" 
                                          Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" >

                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="290"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <!--<Button  x:Name="cmdVerificarPostgres" Command="{Binding cmdVerificarPostgres}" Content="Verificar instalacion PostgreSql"   ToolTip="Verificar si existe una instalacion correcta de postgresql" Opacity="0.9"  >
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                                        <Setter Property="IsEnabled" Value="false" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    -->
                                                    <!--<Condition Binding="{Binding ElementName=txtTelef, Path=(Validation.HasError)}" Value="false" />-->
                                                    <!--
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsEnabled" Value="true" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>-->
                                                    <TextBlock x:Name="MessageTextBlock4" Grid.Row="0" Text="Verificar instalacion de Postgresql v. 9x" HorizontalAlignment="Left" VerticalAlignment="center"  />
                                                    <TextBox Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding txtPostgresVerificar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                                    <TextBlock x:Name="MessageTextBlock5" Grid.Row="1" Text="Conexiones disponibles" HorizontalAlignment="Left" VerticalAlignment="center"  />
                                                    <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                                                        <ComboBox   Grid.Column="1" Grid.Row="1" x:Name="cmbBasesDisponibles" Width="190"
                                                       ItemsSource="{Binding ListadoConexionesBakup, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="descripcion"
                                                       SelectedItem="{Binding SelectedConexionBakup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       Margin="1" ToolTip="Bases de datos disponibles"/>
                                                        <Button  Grid.Row="1" x:Name="cmdConectarABase" Command="{Binding cmdConectarABase}" Content="Conectar"  Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" Width="110" IsEnabled="{Binding HabilitarConectarBase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                            <!--<Button.Style>
                                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                                            <Setter Property="IsEnabled" Value="false" />
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        -->
                                                            <!--<Condition Binding="{Binding ElementName=txtTelef, Path=(Validation.HasError)}" Value="false" />-->
                                                            <!--
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="IsEnabled" Value="true" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>-->
                                                        </Button>
                                                        <Button  Grid.Row="1" x:Name="cmdDesConectarABase" Command="{Binding cmdDesConectarABase}" Content="Desconectar"  Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" Width="110" IsEnabled="{Binding HabilitarDesconectarBase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                                                        </Button>
                                                    </StackPanel>


                                                    <Label  Grid.Column="0" Grid.Row="2" Content="Puerto de escucha: "  HorizontalAlignment="Left"/>
                                                    <TextBox x:Name="txtPuertoConexionx"  Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ToolTip="Estado de la conexion" IsReadOnly="true">
                                                        <Binding Path="Puertoconexion" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                            <Binding.ValidationRules>
                                                                <!--<local:TextBoxNoVacioValidationRule x:Name="TXTPUERTOValidacion1x"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                                        <local:ValidacionSoloDigitos x:Name="txtPuertoConexionValidacion7x" ValidatesOnTargetUpdated="True" Message="Solo se permiten numeros"/>-->

                                                                <!--<local:ExcluirChar x:Name="txtPuertoValidacion2"  NoPermitir="/;,[]{}()*-+~^_-=!@$%\'&lt;&gt;&quot;" ValidatesOnTargetUpdated="True" Message="La IP contiene caracteres no permitidos."/>-->

                                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="8" NumeritoMayorIgualQue="1" EsRequerido="True"  x:Name="txtPuertoValidacion3x" ValidatesOnTargetUpdated="True" Message="Ingrese un nombre de longitud mayor que 1 y menor o igual que 8"/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox>
                                                    <TextBlock Grid.Column="1" Grid.Row="3" Name="lblubicacion" Text="{Binding lblubicacion, Mode=TwoWay}"    Width="AUTO" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                                    <!--<Label Grid.Row="0" Grid.ColumnSpan="2" Content="Elija la configuracion que describa los datos con mayor precision." HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0"/>
                                            <CheckBox Grid.Row="1" Grid.ColumnSpan="2" Content="Delimitados &#8230;&#8230;-Caracteres como coma o tabulaciones separan campos." Margin="15,0,0,0" HorizontalAlignment="Left"      VerticalAlignment="Center" IsChecked="True" IsEnabled="False"/>-->
                                                    <!--<CheckBox Grid.Row="2" Grid.ColumnSpan="2" Content="De ancho fijo &#8230;&#32;-Los campos estan alineados en columnas con espacios entre uno y otro." Margin="15,0,0,0" HorizontalAlignment="Left"   VerticalAlignment="Center" IsEnabled="False"/>
                                            <Label Grid.Row="3" Grid.ColumnSpan="1" Content="Comenzar a importar en la fila: " HorizontalAlignment="Left" Margin="1"/>-->


                                                </Grid>
                                            </GroupBox>


                                            <GroupBox Header="Listado de bases de datos" HorizontalAlignment="Stretch"  Margin="3,0,3,0"
                                          Grid.Column="0" Grid.Row="1">

                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Border Width="150" Height="155" CornerRadius="15" BorderBrush="Gray" BorderThickness="1.5" Background="White" HorizontalAlignment="Center">
                                                        <Grid>
                                                            <ListBox Width="135" Height="135" Margin="5,5,0,0"  ScrollViewer.HorizontalScrollBarVisibility="Auto" Name="LstDatos" 
                                                             ItemsSource="{Binding LstDatox,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                             SelectedItem="{Binding SelectedNombreBase}"
                                                             HorizontalAlignment="Left" VerticalAlignment="Top" 
                                                             Background="Transparent">
                                                                <!--<ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding datname}"  FontFamily="Cambria" FontSize="12" FontWeight="Bold" Foreground="Blue" TextAlignment="Center"  ></TextBlock>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>-->
                                                                <!--<ListBox.ContextMenu>
                                                            <ContextMenu Width="50"  Foreground="Yellow">
                                                                <MenuItem  Click="Buscar_Rows" Foreground="Yellow">
                                                                    -->
                                                                <!--<MenuItem.Icon>
                                                                        -->
                                                                <!--<Image Source="/Imagenes/eliminar.png" Width="25" Height="20" Margin="5,0,0,0"></Image>-->
                                                                <!--
                                                                    </MenuItem.Icon>-->
                                                                <!--
                                                                    <MenuItem.Header>
                                                                        <StackPanel Margin="2,0,-40,0">
                                                                            <TextBlock  VerticalAlignment="Stretch" TextAlignment="Center"  FontFamily="Cambria" FontWeight="Bold" Text="Eliminar" Foreground="Yellow" Background="Transparent" FontStyle="Italic" ></TextBlock>
                                                                        </StackPanel>
                                                                    </MenuItem.Header>
                                                                </MenuItem>
                                                            </ContextMenu>
                                                        </ListBox.ContextMenu>-->
                                                            </ListBox>
                                                        </Grid>
                                                        <Border.BitmapEffect>
                                                            <DropShadowBitmapEffect Color="Black" Direction="5"  ShadowDepth="2" Softness="1" Opacity="0.8"></DropShadowBitmapEffect>
                                                        </Border.BitmapEffect>
                                                    </Border>

                                                </Grid>
                                            </GroupBox>

                                            <GroupBox Header="Crear Backup" HorizontalAlignment="Stretch"  Margin="3,0,3,0"
                                          Grid.Column="1" Grid.Row="1">

                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <!--<Button Content="Seleccione la ubicacion donde guardar" Grid.Row="0" />-->
                                                    <Button  x:Name="cmdUbicacionGuardarx" Command="{Binding cmdUbicacionAGuardar}" Content="Guardar copia en ?"   ToolTip="Ubicacion donde se creara la copia de la base de datos local" IsEnabled="{Binding HabilitarExaminarGuardar, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >

                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                                                <Setter Property="IsEnabled" Value="false" />
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <!--<Condition Binding="{Binding ElementName=txtTelef, Path=(Validation.HasError)}" Value="false" />-->
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="IsEnabled" Value="true" />
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <TextBlock Grid.Column="1" Grid.Row="1" Name="lblBaseSelecionada" Text="{Binding Nombre_Base, Mode=TwoWay}"    Width="AUTO" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                                    <TextBox Grid.Row="2"  Text="{Binding txtRutaGuardarBackup, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" IsReadOnly="true" Width="300"/>

                                                    <Button  Height="40" Width="190" Grid.Row="3" IsEnabled="{Binding HabilitarCrearBakap, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                    	        x:Name="cmdCrearBackupx" 
                                    	        Command="{Binding cmdCrearBackup}" 
                                    	         
                                    	        ToolTip="Empezar a crear Backup" Opacity="0.9"   HorizontalAlignment="Center" >
                                                        <StackPanel Orientation="Horizontal">
                                                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                                <Rectangle 
                                                        Width="40"
                                                        Height="30"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                                    <Rectangle.OpacityMask>
                                                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_database}" />
                                                                    </Rectangle.OpacityMask>
                                                                </Rectangle>
                                                                <Canvas>
                                                                    <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                                </Canvas>
                                                                <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                                            </StackPanel>
                                                            <TextBlock Margin="1" Width="130"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Crear Bakup" />
                                                        </StackPanel>
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                                <Setter Property="IsEnabled" Value="false" />
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <!--<Condition Binding="{Binding (Validation.HasError), ElementName=txtTelef}" Value="false" />-->
                                                                            <!--<Condition Binding="{Binding ElementName=cmbTipoTelefonos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="IsEnabled" Value="true" />
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>

                                                </Grid>
                                            </GroupBox>

                                            <GroupBox Header="Restaurar Backup" HorizontalAlignment="Stretch"  Margin="3,0,2.667,0"
                                          Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2"  >
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <!--<Button Content="Seleccione la ubicacion donde guardar" Grid.Row="0" />-->
                                                    <Button  x:Name="cmdUbicacionRestarurar" Command="{Binding cmdUbicacionRestaurar}" Content="Importar desde ?"  ToolTip="Ubicacion donde se encuentra la copia a restaurar" HorizontalAlignment="Center" Width="341" IsEnabled="{Binding HabilitarExaminarRestaurar, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                                                <Setter Property="IsEnabled" Value="false" />
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <!--<Condition Binding="{Binding ElementName=txtTelef, Path=(Validation.HasError)}" Value="false" />-->
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="IsEnabled" Value="true" />
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <TextBlock Grid.Column="1" Grid.Row="1" Name="lblBaseDefecto" Text="{Binding Nombre_Base_Defecto, Mode=TwoWay}"    Width="AUTO" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                                    <TextBox Grid.Row="2"  Text="{Binding txtRutaBuscarBackup, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" IsReadOnly="true"/>
                                                    <Button  Height="40" Width="190" Grid.Row="3" IsEnabled="{Binding HabilitarRestaurarBakap, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                    	        x:Name="cmdRestaurarBackup" 
                                    	        Command="{Binding cmdRestaurarBackup}" 
                                    	         
                                    	        ToolTip="Empezar a restaurar Backup"   HorizontalAlignment="Center" >
                                                        <StackPanel Orientation="Horizontal">
                                                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                                <Rectangle 
                                                        Width="40"
                                                        Height="30"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                                    <Rectangle.OpacityMask>
                                                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_database_sql}" />
                                                                    </Rectangle.OpacityMask>
                                                                </Rectangle>


                                                            </StackPanel>
                                                            <TextBlock Margin="1" Width="130"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Restaurar Bakup" />
                                                        </StackPanel>
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                                <Setter Property="IsEnabled" Value="false" />
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <!--<Condition Binding="{Binding (Validation.HasError), ElementName=txtTelef}" Value="false" />-->
                                                                            <!--<Condition Binding="{Binding ElementName=cmbTipoTelefonos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="IsEnabled" Value="true" />
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>

                                                </Grid>
                                            </GroupBox>



                                        </Grid>

                                    </Grid>

                                </Border>
                                <!--</Border>-->
                            </Grid>
                            <!--</DockPanel>-->
                            <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding Path=MiComanditoSistema}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                        </TabItem>

                    </TabControl>
                </Border>
            </Grid>
            </Grid>
    </Grid>
</UserControl>
