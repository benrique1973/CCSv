<UserControl x:Class="SGPTmvvm.Vistas.tabcontenedorClienteContactos"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
             
             xmlns:cmd="http://www.galasoft.ch/mvvmlight"

             xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             xmlns:helpers="clr-namespace:SGPTWpf.Helpers"
  
             xmlns:ViewModels="clr-namespace:SGPTmvvm.ViewModel"


             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="750">

    <Control.Resources>
        <!--Este Style RadioButtonList es para que puedan haber radiobottons bindiados-->
        <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="3" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border BorderThickness="0" Background="Transparent">
                                        <RadioButton 
                                            Focusable="False"
                                            IsHitTestVisible="False"
                                            IsChecked="{TemplateBinding IsSelected}">
                                            <ContentPresenter />
                                        </RadioButton>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ESte DataTemplate junto con el ItemPanelTemplate es para que puedan haber dos columnas o mas en un combobox personalizado-->
        <DataTemplate x:Key="advancedComboxItemDataTemplate">
            <Grid Width="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="A"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--DisplayMemberPath="numerotelefono"-->
                <TextBlock Text="{Binding numerotelefono}" Margin="5" Grid.Column="0" TextAlignment="Left"/>
                <TextBlock Text="{Binding descripciontelefono}" Margin="5" Grid.Column="1" TextAlignment="Left">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Path=IsSelected}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="advancedComboxItemsPanelTemplate">
            <StackPanel Grid.IsSharedSizeScope="True" IsItemsHost="True"/>
        </ItemsPanelTemplate>

        <!--Este conversor es para poder activar o desactivar botones usando el multiDataTrigger-->
        <local:NotNullToBoolConverter x:Key="NotNullToBoolConverter"/>

        <!--<ResourceDictionary x:Key="Dicc">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Dictionary1.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>-->
        <!--Este sirve para darle formato a botones personalizados con imagenes-->
        <Style
            x:Key="BotonEstilo"
            TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style
            x:Key="StackPanelEstilo"
            TargetType="StackPanel">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="2,0" />
        </Style>
    </Control.Resources>
    <Grid>
        <Grid Height="Auto" Width="Auto" Margin="1">
            <Grid.RowDefinitions >
                <RowDefinition MinHeight="50" MaxHeight="60" Height="57" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}">
                <Grid
                    VerticalAlignment="Top"
                    HorizontalAlignment="Stretch"
                    Height="55"
                    x:Name="Fondo"
                    Background="Transparent" >
                    <StackPanel Orientation="Horizontal">
                        <TextBox Name="txtBandera" Text="{Binding txtBandera, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaNuevo" Text="{Binding txtBanderaNuevo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaEditar" Text="{Binding txtBanderaEditar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaConsultar" Text="{Binding txtBanderaConsultar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaEliminar" Text="{Binding txtBanderaEliminar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaAgregar" Text="{Binding txtBanderaAgregar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaCancelar" Text="{Binding txtBanderaCancelar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaRegresar" Text="{Binding txtBanderaRegresar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>

                        <Button
                            Command="{Binding cmdNuevoClientes_Click}" 
                            ToolTip="Nueva estructura organica">

                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_app_plus}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Nuevo" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                <Condition Binding="{Binding ElementName=txtBanderaNuevo, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            Command="{Binding cmdEditarClientes_Click}" 
                            ToolTip="Editar cliente">

                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Editar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                <Condition Binding="{Binding ElementName=txtBanderaEditar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            
                        Command="{Binding cmdConsultarClientes_Click}" >
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_social_amazon_appstore}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="48"  TextAlignment="Center" VerticalAlignment="Center" Text="Consulta" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaConsultar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            Command="{Binding cmdEliminarClientes_Click}" 
                            ToolTip="Eliminar un cliente">

                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_delete}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Eliminar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaEliminar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <Button
                            Command="{Binding Agregar}" 
                            ToolTip="Agregar nuevo elemento ">

                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Agregar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaAgregar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--<Button
                            Command="{Binding cmdAgregarPersonal}" 
                            ToolTip="Agregar nueva fila">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                Width="45"
                                Height="25"
                                Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Agregar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                -->
                        <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                        <!--
                                                <Condition Binding="{Binding ElementName=txtBanderaAgregar, Path=Text}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>-->

                        <Button
                            Command="{Binding cmdGuardarClientes_Click}" 

                            ToolTip="Permite guardar los cambios">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_save}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Guardar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=txtBandera, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />

                                                <!--Campos Datos Generales-->
                                                <!--
                                                <Condition Binding="{Binding ElementName=txtNombreFirma, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtNIT, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtCNRC, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtPaginaWeb, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtNoCVPV, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtDireccion, Path=(Validation.HasError)}" Value="false" />

                                                <Condition Binding="{Binding ElementName=cmbRepresentanteLegal, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                <Condition Binding="{Binding ElementName=cmbPaises, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                <Condition Binding="{Binding ElementName=cmbDepartamentos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>

                                                -->
                                                <!--Campos Configuracion del sistema-->
                                                <!--
                                                <Condition Binding="{Binding ElementName=txtIpConexionx, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtPuertoConexion, Path=(Validation.HasError)}" Value="false" />-->
                                                <Condition Binding="{Binding ElementName=txtRazonSocial, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtDireccion, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtNIT, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtNRC, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtPaginaWeb, Path=(Validation.HasError)}" Value="false" />

                                                <!--<Condition Binding="{Binding ElementName=txtBandera, Path=Text}" Value="1" />-->

                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbTipoEntidad}" Value="True"/>
                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbPaises}" Value="True"/>
                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbDepartamentos}" Value="True"/>
                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbActividadEc}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--Cancelar-->
                        <Button
                            Command="{Binding cmdCancelarClientes_Click}" >
                            <StackPanel Style="{StaticResource StackPanelEstilo}">
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_cancel}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Cancelar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaCancelar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            Command="{Binding CmdVolver}" >
                            <StackPanel Style="{StaticResource StackPanelEstilo}">
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_door_leave}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="48"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Regresar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaRegresar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <!--<Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XExcellCommand}" IsEnabled="False" >
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_office_excel}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                            </StackPanel>
                        </Button>
                        <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XWordCommand}" IsEnabled="false">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                                <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_office_word}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </StackPanel>
                        </Button>
                        <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XPdfCommand}" IsEnabled="False">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_page_pdf}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                            </StackPanel>
                        </Button>-->
                    </StackPanel>
                </Grid>
            </Border>
            <DataGrid Grid.Row="1" Visibility="{Binding HabilitarListadoClientes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        AutoGenerateColumns="False"  SelectionMode="Single"
                        Margin="1,1,1,1"
                        Name="dataGridClientes"
                        VerticalAlignment="Top"
                        HorizontalScrollBarVisibility="Auto"
                        Width="Auto"
                        ItemsSource="{Binding Path= ListadoClientesM , UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding ClienteSelected}"
                        CanUserAddRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding idnitcliente, Mode=TwoWay}"  Header="NIT" x:Name="IDClic" IsReadOnly="True"  Width="150" MaxWidth="160" MinWidth="140"/>
                    <DataGridTextColumn Binding="{Binding razonsocialcliente, Mode=TwoWay}" x:Name="CliRazonSocialc" Header="Cliente" IsReadOnly="True"  Width="300" MaxWidth="400" MinWidth="300"/>
                    <DataGridTextColumn Binding="{Binding estructuraorganica, Mode=TwoWay}" x:Name="CliEstructuraO" Header="Estructura Organica" IsReadOnly="True"  Width="160" MaxWidth="180" MinWidth="80"/>
                    <DataGridTextColumn Binding="{Binding cantidadcontactos, Mode=TwoWay}" x:Name="CliContacto" Header="Contactos" IsReadOnly="True"  Width="100" MaxWidth="480" MinWidth="80"/>
                    
                </DataGrid.Columns>
            </DataGrid>
            <TabControl Grid.Row="1" SelectedIndex="{Binding FocoPestañaSeleccionada, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding HabilitarTabContactos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Black" CornerRadius="1,7,1,7" Margin="2,0">
                                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="16,0"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <!--<Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />-->
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ResourceKey=AccentColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <!--<Setter TargetName="Border" Property="Background" Value="GhostWhite" />-->
                                            <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <!--<Image Source="/SGPTmvvm;component/img/BulletBlue.png"/>-->
                            <TextBlock Text="  Estructura organica" Foreground="Black"  FontWeight="Bold"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding Path=MiComanditoEstructuraO}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>
                    </TabItem.Header>

                    <Grid Margin="1">
                        <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"
					                 Margin="1,2,5,2" CornerRadius="0,0,0,0">
                            <Grid  >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="350"/>
                                    <RowDefinition Height="50"/>
                                </Grid.RowDefinitions>

                                <DataGrid x:Name="dGEstructuraz" Grid.Row="0" Margin="2"
                                                          AutoGenerateColumns="False" 
                                                          ItemsSource="{Binding ListadoEstructuraO, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                          HeadersVisibility="Column"
                                                          SelectedItem="{Binding SelectedMiembroEstructura, Mode=TwoWay}" 
                                                          SelectionMode="Single"
                                                          CanUserAddRows="False"
                                                          CanUserDeleteRows="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding idcargoeo, Mode=TwoWay}"  Header="ID" IsReadOnly="True" Width="50"/>
                                        <DataGridTextColumn Binding="{Binding nombrecargoeo, Mode=TwoWay}"  Header="Cargo" Width="200" />
                                        <DataGridTextColumn Binding="{Binding estidcargoeo, Mode=TwoWay}"  Header="Dependencia" Width="165" />
                                        <DataGridTextColumn Binding="{Binding responsabilidadeo, Mode=TwoWay}"  Header="Descripcion" Width="150"/>

                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>

                        </Border>
                    </Grid>

                </TabItem>

                <!--********************************************Parte de Contactos******************************************************-->
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <!--<Image Source="/SGPTmvvm;component/img/BulletRed2.png"/>-->
                            <TextBlock Text="  Contactos " Foreground="Black"  FontWeight="Bold"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding Path=MiComanditoContactos}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>

                    </TabItem.Header>
                    <Grid Margin="1">

                        <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"
					                 Margin="1" CornerRadius="0,0,0,0" >
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                            </Border.BitmapEffect>
                            <Grid  >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="350"/>
                                    <RowDefinition Height="50"/>
                                </Grid.RowDefinitions>

                                <DataGrid x:Name="dGContactosz" Grid.Row="0" Margin="2"
                                                          AutoGenerateColumns="False" 
                                                          ItemsSource="{Binding ListadoContactosx, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                          HeadersVisibility="Column"
                                                          SelectedItem="{Binding SelectedContactox, Mode=TwoWay}" 
                                                          SelectionMode="Single"
                                                          CanUserAddRows="False"
                                                          CanUserDeleteRows="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding idcontacto, Mode=TwoWay}"  Header="ID" IsReadOnly="True" Width="50"/>
                                        <DataGridTextColumn Binding="{Binding nombrecompleto, Mode=TwoWay}"  Header="Nombre" Width="200" />
                                        <DataGridTextColumn Binding="{Binding nombrecargo, Mode=TwoWay}"  Header="Cargo" Width="165" />
                                        <DataGridTextColumn Binding="{Binding telefonos, Mode=TwoWay}"  Header="Telefono" Width="150"/>
                                        <DataGridTextColumn Binding="{Binding correos, Mode=TwoWay}"  Header="Email" Width="150"/>
                                    </DataGrid.Columns>
                                </DataGrid>

                            </Grid>

                        </Border>
                    </Grid>


                </TabItem>


            </TabControl>

        </Grid>

    </Grid>
</UserControl>
