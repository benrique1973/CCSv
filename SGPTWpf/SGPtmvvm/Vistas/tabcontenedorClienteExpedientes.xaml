<UserControl x:Class="SGPTmvvm.Vistas.tabcontenedorClienteExpedientes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
             
             xmlns:cmd="http://www.galasoft.ch/mvvmlight"

             xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             xmlns:helpers="clr-namespace:SGPTWpf.Helpers"
  
             xmlns:ViewModels="clr-namespace:SGPTmvvm.ViewModel"

             mc:Ignorable="d">

    <Control.Resources>
        <!--Este Style RadioButtonList es para que puedan haber radiobottons bindiados-->
        <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="3" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border BorderThickness="0" Background="Transparent">
                                        <RadioButton 
                                            Focusable="False"
                                            IsHitTestVisible="False"
                                            IsChecked="{TemplateBinding IsSelected}">
                                            <ContentPresenter />
                                        </RadioButton>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ESte DataTemplate junto con el ItemPanelTemplate es para que puedan haber dos columnas o mas en un combobox personalizado-->
        <DataTemplate x:Key="advancedComboxItemDataTemplate">
            <Grid Width="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="A"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--DisplayMemberPath="numerotelefono"-->
                <TextBlock Text="{Binding numerotelefono}" Margin="5" Grid.Column="0" TextAlignment="Left"/>
                <TextBlock Text="{Binding descripciontelefono}" Margin="5" Grid.Column="1" TextAlignment="Left">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Path=IsSelected}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="advancedComboxItemsPanelTemplate">
            <StackPanel Grid.IsSharedSizeScope="True" IsItemsHost="True"/>
        </ItemsPanelTemplate>

        <!--Este conversor es para poder activar o desactivar botones usando el multiDataTrigger-->
        <local:NotNullToBoolConverter x:Key="NotNullToBoolConverter"/>


        <!--Este sirve para darle formato a botones personalizados con imagenes-->
        <Style
            x:Key="BotonEstilo"
            TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style
            x:Key="StackPanelEstilo"
            TargetType="StackPanel">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="2,0" />
        </Style>

    </Control.Resources>
    <Grid>
        <Grid >
            <Grid.RowDefinitions >
                <RowDefinition MinHeight="50" MaxHeight="60" Height="57" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <!--{DynamicResource AccentColorBrush}-->
            <!--Este es la barra de menus-->
            <Border Grid.Row="0" BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}">
                <Grid
                    VerticalAlignment="Top"
                    HorizontalAlignment="Stretch"
                    Height="55"
                    x:Name="Fondo"
                    Background="Transparent" >
                    <StackPanel Orientation="Horizontal">
                        <TextBox Name="txtBandera" Text="{Binding txtBandera, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaNuevo" Text="{Binding txtBanderaNuevo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaEditar" Text="{Binding txtBanderaEditar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaConsultar" Text="{Binding txtBanderaConsultar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaEliminar" Text="{Binding txtBanderaEliminar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaAgregar" Text="{Binding txtBanderaAgregar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaCancelar" Text="{Binding txtBanderaCancelar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>
                        <TextBox Name="txtBanderaRegresar" Text="{Binding txtBanderaRegresar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"/>

                        <Button
                            Command="{Binding cmdNuevoClientes_Click}" 
                            ToolTip="Nuevo cliente">

                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_app_plus}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Nuevo" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaNuevo, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--<Button
                            Command="{Binding cmdNuevoClientes_Click}" IsEnabled="{Binding HabilitarBtnNuevo}"
                            Margin="0,0,0,-0.333" 
                            ToolTip="Permite crear el registro de la firma si aun no existiera">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
            			            Width="45"
            			            Height="25"
            			            Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_app_plus}" AutoLayoutContent="True" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Nuevo" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                -->
                        <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                        <!--
                                                <Condition Binding="{Binding ElementName=txtBanderaNuevo, Path=Text}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>-->

                        <Button
                            Command="{Binding cmdEditarClientes_Click}" 
                            ToolTip="Editar cliente">

                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Editar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                <Condition Binding="{Binding ElementName=txtBanderaEditar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--<Button
                            Command="{Binding cmdEditarClientes_Click}"
                            IsEnabled="{Binding HabilitarBtnModificar}"
                            ToolTip="Permite editar los datos del cliente">
                            <StackPanel Style="{StaticResource StackPanelEstilo}">
                                <Rectangle Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Editar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                <Condition Binding="{Binding ElementName=txtBanderaEditar, Path=Text}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>-->

                        <Button
                            
                        Command="{Binding cmdConsultarClientes_Click}" >
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_social_amazon_appstore}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="48"  TextAlignment="Center" VerticalAlignment="Center" Text="Consulta" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaConsultar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            Command="{Binding cmdEliminarClientes_Click}" 
                            ToolTip="Eliminar un cliente">

                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_delete}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Eliminar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaEliminar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <Button
                            Command="{Binding cmdAgregarPersonal}" 
                            ToolTip="Agregar nuevo personal">

                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Agregar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaAgregar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--<Button
                            Command="{Binding cmdAgregarPersonal}" 
                            ToolTip="Agregar nueva fila">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                Width="45"
                                Height="25"
                                Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Agregar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                -->
                        <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                        <!--
                                                <Condition Binding="{Binding ElementName=txtBanderaAgregar, Path=Text}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>-->

                        <Button
                            Command="{Binding cmdGuardarClientes_Click}" 

                            ToolTip="Permite guardar los cambios">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_save}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Guardar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=txtBandera, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />

                                                <!--Campos Datos Generales-->
                                                <!--
                                                <Condition Binding="{Binding ElementName=txtNombreFirma, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtNIT, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtCNRC, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtPaginaWeb, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtNoCVPV, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtDireccion, Path=(Validation.HasError)}" Value="false" />

                                                <Condition Binding="{Binding ElementName=cmbRepresentanteLegal, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                <Condition Binding="{Binding ElementName=cmbPaises, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                <Condition Binding="{Binding ElementName=cmbDepartamentos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>

                                                -->
                                                <!--Campos Configuracion del sistema-->
                                                <!--
                                                <Condition Binding="{Binding ElementName=txtIpConexionx, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtPuertoConexion, Path=(Validation.HasError)}" Value="false" />-->
                                                <Condition Binding="{Binding ElementName=txtRazonSocial, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtDireccion, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtNIT, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtNRC, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtPaginaWeb, Path=(Validation.HasError)}" Value="false" />

                                                <!--<Condition Binding="{Binding ElementName=txtBandera, Path=Text}" Value="1" />-->

                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbTipoEntidad}" Value="True"/>
                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbPaises}" Value="True"/>
                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbDepartamentos}" Value="True"/>
                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbActividadEc}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--Cancelar-->
                        <Button
                            Command="{Binding cmdCancelarClientes_Click}" >
                            <StackPanel Style="{StaticResource StackPanelEstilo}">
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_cancel}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Cancelar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaCancelar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            Command="{Binding CmdVolver}" >
                            <StackPanel Style="{StaticResource StackPanelEstilo}">
                                <Rectangle 
                                    Width="45"
                                    Height="25"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_door_leave}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="48"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Regresar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=dataGridClientes, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                                <Condition Binding="{Binding ElementName=txtBanderaRegresar, Path=Text, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <!--<Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XExcellCommand}" IsEnabled="False" >
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_office_excel}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                            </StackPanel>
                        </Button>
                        <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XWordCommand}" IsEnabled="false">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                                <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_office_word}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </StackPanel>
                        </Button>
                        <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XPdfCommand}" IsEnabled="False">
                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_page_pdf}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                            </StackPanel>
                        </Button>-->
                    </StackPanel>
                </Grid>
            </Border>
            <!--Datagrid de los clientes-->
            <DataGrid Grid.Row="1" Visibility="{Binding HabilitarListadoClientes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        AutoGenerateColumns="False"  SelectionMode="Single"
                        Margin="1,1,1,1"
                        Name="dataGridClientes"
                        VerticalAlignment="Top"
                        HorizontalScrollBarVisibility="Auto"
                        Width="Auto"
                        ItemsSource="{Binding Path= ListadoClientes , UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding ClienteSelected}"
                        CanUserAddRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding idnitcliente, Mode=TwoWay}"  Header="NIT" x:Name="IDCli" IsReadOnly="True"  Width="150" MaxWidth="160" MinWidth="140"/>
                    <DataGridTextColumn Binding="{Binding razonsocialcliente, Mode=TwoWay}" x:Name="CliRazonSocial" Header="Cliente" IsReadOnly="True"  Width="400" MaxWidth="480" MinWidth="350"/>
                </DataGrid.Columns>
            </DataGrid>
            <TabControl Grid.Row="1" SelectedIndex="{Binding FocoPestañaSeleccionada, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding HabilitarTabExpedientes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <!--<TabControl Grid.Row="1" Visibility="{Binding HabilitarTabExpedientes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">-->
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border Name="Border" BorderThickness="1,1,1,1" BorderBrush="Black" CornerRadius="1,7,1,7" Margin="2,0">
                                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="16,0"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <!--<Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />-->
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ResourceKey=AccentColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <!--<Setter TargetName="Border" Property="Background" Value="GhostWhite" />-->
                                            <Setter TargetName="Border" Property="Background" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem ToolTip="Para guardar el personal, es necesario completar los datos del nuevo cliente">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <!--<Image Source="/SGPTmvvm;component/img/BulletBlue.png"/>-->
                            <TextBlock Text="  Datos generales" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontWeight="Bold"/>
                            <!--<Image Source="/SGPTmvvm;component/img/BulletBlue.png"/>-->
                            <!--<Image Source="/SGPTmvvm;component/img/BulletBlue.png"/>-->
                            <!--<i:Interaction.Triggers>
                            Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}"
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding Path=MiComanditoDatosG}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                        </StackPanel>
                    </TabItem.Header>

                    <Grid>

                        <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"
					                 Margin="1" CornerRadius="0,0,0,0">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                            </Border.BitmapEffect>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35"/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition Height="60"/>
                                    <RowDefinition Height="60"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="MessageTextBlock" Text="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" TextWrapping="Wrap"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <!--<TextBox x:Name="txtBandera" Grid.Row="0"  Text="{Binding txtBandera, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden" Margin="0,0,0,31" Grid.RowSpan="2"/>-->
                                <Label Content="* Razon social:  "          Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* Direccion:  "             Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* Fecha constitucion:  "    Grid.Column="0" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* Tipo entidad:  "          Grid.Column="2" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* Pais:  "                  Grid.Column="0" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* Departamento:  "          Grid.Column="2" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* Municipio:  "             Grid.Column="4" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* Actividad economica:  "   Grid.Column="0" Grid.Row="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="Detalles activ. econ.:"   Grid.Column="3" Grid.Row="5"   HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* NIT:  "                   Grid.Column="0" Grid.Row="6" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="* NRC:  "                   Grid.Column="3" Grid.Row="6" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Content="Sitio Web:  "               Grid.Column="0" Grid.Row="7" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                                <TextBox x:Name="txtRazonSocial" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="6"  IsEnabled="{Binding HabilitartxtNombrex}" controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Razon social" Margin="0">
                                    <Binding Path="Razonsocialcliente" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                        <Binding.ValidationRules>
                                            <local:TextBoxNoVacioValidationRule x:Name="PrimerNombreValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                            <local:ExcluirChar x:Name="PrimerNombreValidation2"  ValidatesOnTargetUpdated="True" Message="El nombre contiene caracteres no permitidos."/>
                                            <local:ValidacionMenorQue NumeritoMenorIgualQue="100" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="PrimerNombrevalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima del nombre es 100"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox>
                                <TextBox Name="txtDireccion" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="6" IsEnabled="{Binding HabilitartxtDireccion}" controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Direccion del cliente" Margin="0">
                                    <TextBox.Text>
                                        <Binding Path="Direccioncliente" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <local:TextBoxNoVacioValidationRule x:Name="DireccionValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="50" EsRequerido="False"  x:Name="Direccionpersonavalidation4" ValidatesOnTargetUpdated="True" Message="La longitud de la direccion es incorrecta. maximo 50 Caracteres"/>
                                                <local:ExcluirChar  NoPermitir="/;[]{}()*-+~^_=!@$%\'&lt;&gt;&amp;" x:Name="DireccionpersonaValidacion1" ValidatesOnTargetUpdated="True" Message="La direccion contiene caracteres no permitidos"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <DatePicker Grid.Column="1" Grid.Row="3" x:Name="dpickFechaCVPA" IsEnabled="{Binding HabilitardpickFechaCVPA}"
                                    DisplayDate="{Binding DateTime.Now()}" 
                                    Focusable="False" 
                                    SelectedDate="{Binding Fechaconstitucioncliente, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <ComboBox Grid.Column="3" Grid.Row="3" HorizontalAlignment="Stretch" x:Name="cmbTipoEntidad"
                                                       Text="--Seleccione tipo entidad--" IsEditable="True" IsReadOnly="True"
                                                       ItemsSource="{Binding ListadoTipoEntidades , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="descripcionclasificacion" 
                                                       SelectedItem="{Binding SelectedTipoEntidad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarEntidad}"/>



                                <ComboBox  HorizontalAlignment="Stretch" Grid.Column="1" Grid.Row="4" x:Name="cmbPaises"
                                                       Text="--Seleccione pais-" IsEditable="True" IsReadOnly="True"
                                                       ItemsSource="{Binding ListadoPaises, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="nombrepais"
                                                       SelectedItem="{Binding SelectedPais, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        IsEnabled="{Binding HabilitarComboPaises}" />
                                <ComboBox  HorizontalAlignment="Stretch" Grid.Column="3" Grid.Row="4" x:Name="cmbDepartamentos"
                                                       Text="--Seleccione departamento--" IsEditable="True" IsReadOnly="True"
                                                       ItemsSource="{Binding ListadoDepartamentos , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="nombredepartamento" 
                                                       SelectedItem="{Binding SelectedDepartamento, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarDepartamento}" />
                                <ComboBox HorizontalAlignment="Stretch" Grid.Column="5" Grid.Row="4"
                                                       Text="--Seleccione municipio-" IsEditable="True" IsReadOnly="True"
                                                       ItemsSource="{Binding ListadoMunicipios , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="nombremunicipio" 
                                                       SelectedItem="{Binding SelectedMunicipio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarMunicipio}"/>

                                <ComboBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="cmbActividadEc"
                                                       Text="--Seleccione actividad economica--" IsEditable="True" IsReadOnly="True"
                                                       ItemsSource="{Binding ListadoActividadEconomica , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="descripcionactividad" 
                                                       SelectedItem="{Binding SelectedActividadEconomica, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarActividad}"/>
                                <TextBox Name="txtActividad" Grid.Column="4" Grid.Row="5" IsEnabled="{Binding HabilitartxtActividadCli}" controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Descripcion actividad economica" ToolTip="Descripcion actividad economica"  Grid.ColumnSpan="2">
                                    <TextBox.Text>
                                        <Binding Path="Actividadcliente" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <local:ExcluirChar  NoPermitir=";[]{}()*+~^_=!$%\'&lt;&gt;" x:Name="PaginaWebValidacion1" ValidatesOnTargetUpdated="True" Message="La actividad contiene caracteres no permitidos"/>
                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="250" NumeritoMayorQue="5" EsRequerido="False"  x:Name="ActividadClValidation4" ValidatesOnTargetUpdated="True" Message="La longitud esta fuera del tamaño permitido [5 - 250]"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox Name="txtNIT" Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" IsEnabled="{Binding HabilitartxtNIT}" controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Numero de Identificacion Tributaria (NIT)">
                                    <TextBox.Text>
                                        <Binding Path="Idnitcliente" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <local:TextBoxNoVacioValidationRule x:Name="NitClienteValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                                <local:ValidacionNIT x:Name="NitClienteValidation3" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>
                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="17" NumeritoMayorQue="16" EsRequerido="False"  x:Name="Nitpersonavalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del NIT es incorrecta. maximo 17 incluyendo separadores"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox Name="txtNRC"  Grid.Column="4" Grid.Row="6" Grid.ColumnSpan="2" IsEnabled="{Binding HabilitarNRC}" ToolTip="Numero de Registro del Contribuyente (NRC)" controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Numero de registro del contribuyente">
                                    <TextBox.Text>
                                        <Binding Path="Nrccliente" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <local:TextBoxNoVacioValidationRule x:Name="NRCValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                                <local:ExcluirChar x:Name="NumNRCValidacion2"  NoPermitir="abcdefghijklmnñopqrstuvwxyzABCDEFGHIJKLMNÑOPQRSTUVWXYZ/;[]{}()*+~^_=!@$%\'&lt;&gt;&quot;" ValidatesOnTargetUpdated="True" Message="NRC contiene caracteres no permitidos."/>
                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="12" NumeritoMayorIgualQue="1" EsRequerido="False"  x:Name="NumeroNRCvalidation4" ValidatesOnTargetUpdated="True" Message="Excede la cantidad de digitos requeridos"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox Name="txtPaginaWeb" Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="5" IsEnabled="{Binding HabilitarPaginaWeb}" controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Sitio web" Margin="1,1,1,1">
                                    <TextBox.Text>
                                        <Binding Path="Paginawebcliente" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <local:ValidacionMenorQue NumeritoMayorIgualQue="1" NumeritoMenorIgualQue="100" EsRequerido="False"  x:Name="PaginaWebvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud de la URL sobrepasa el limite permitido. maximo 100 Caracteres"/>
                                                <!--<local:ExcluirChar  NoPermitir=";[]{}()*+~^_=!$%\'&lt;&gt;" x:Name="PaginaWebValidacion1" ValidatesOnTargetUpdated="True" Message="La URL contiene caracteres no permitidos"/>-->
                                                <local:ValidacionURL EsRequerido="False" ValidatesOnTargetUpdated="True" Message="La URL no es valida"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>

                                <!--******************************************-->
                                <Border Grid.Column="0" Grid.Row="8" Grid.ColumnSpan="6"  BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1,1,1,1" Background="Transparent" />
                                <Border Grid.Column="0" Grid.Row="9" Grid.ColumnSpan="6"  BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1,1,1,1" Background="Transparent" />

                                <StackPanel Orientation="Horizontal" IsEnabled="{Binding HabilitarGridTelefonos}" Margin="0,3" x:Name="GridTelefonos" Grid.Column="0" Grid.Row="8" Grid.ColumnSpan="6"   HorizontalAlignment="Stretch">
                                    <!--<Border BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}">-->
                                    <Label Content="Teléfono" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,3,0" />
                                    <TextBox x:Name="txtTelef" Width="150" Height="35"  Margin="15,0,15,0" >
                                        <Binding Path="TelefonoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <!--<local:ValidacionNIT x:Name="NitpersonaValidation3" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>-->
                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="9" NumeritoMayorIgualQue="8" EsRequerido="False"  x:Name="Telefonovalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del telefono permitida son 9 digitos incluyendo separador."/>
                                                <local:ValidacionTelefono x:Name="Telefonovalidation2" ValidatesOnTargetUpdated="True" Message="Ingrese un telefono con formato [7777-9999]. los telefonos solo pueden comenzar con 2,7,8 y 9"/>
                                                <local:TextBoxNoVacioValidationRule x:Name="TelefonoValidacion1" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <Label Content="Tipo teléfono" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,5,0" />
                                    <ComboBox  Width="150" Height="40"  Margin="0,7,15,7" x:Name="cmbTipoTelefonos"
                                                       ItemsSource="{Binding ListadoTipoTelefono, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       DisplayMemberPath="descripciontt" 
                                                       SelectedValuePath="idtt" 
                                                       SelectedItem="{Binding SelectedTipoTelefono, Mode=TwoWay}" IsReadOnly="False" />
                                    <Button  Height="40" Width="130" Margin="15,0,15,0"
                                    	x:Name="cmdAgreTelef" 
                                    	Command="{Binding cmdAgreTelef_Click}" 
                                    	 
                                    	ToolTip="Agregar correo electronico" Opacity="0.9"   HorizontalAlignment="Left" >
                                        <StackPanel Orientation="Horizontal" Width="120">
                                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                <Rectangle 
                                                        Width="40"
                                                        Height="30"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_thumb_up_add}" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Canvas>
                                                    <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                </Canvas>
                                                <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                            </StackPanel>
                                            <TextBlock Margin="1" Width="55"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Agregar" />
                                        </StackPanel>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (Validation.HasError), ElementName=txtTelef}" Value="false" />
                                                            <Condition Binding="{Binding ElementName=cmbTipoTelefonos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <ComboBox Height="40" Width="150" x:Name="cmbTelefonos" ItemsSource="{Binding ListadoTelefonos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                      SelectedItem="{Binding SelectedTelefonoAgregado, Mode=TwoWay}"
                                                      Margin="15,0,15,0" 
                                                      ItemTemplate="{StaticResource advancedComboxItemDataTemplate}"
                                                      ItemsPanel="{StaticResource advancedComboxItemsPanelTemplate}"/>

                                    <!--<control:MvvmBotonEliminarTelefono HorizontalAlignment="Center" Margin="30,0,0,0"/>-->
                                    <Button Height="40" Width="130"
                                        Command="{Binding cmdQuitTelefono_Click}" Margin="15,0,3,0"   >
                                        <StackPanel Orientation="Horizontal" Width="120">
                                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                <Rectangle 
                                                        Width="55"
                                                        Height="30"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_phone}" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Canvas>
                                                    <Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />
                                                </Canvas>
                                                <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                            </StackPanel>
                                            <TextBlock Margin="1" Width="55"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Eliminar" />
                                        </StackPanel>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=cmbTelefonos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                </StackPanel>

                                <UniformGrid x:Name="GridCorreos" IsEnabled="{Binding HabilitarGridCorreos}" Grid.Column="0" Grid.Row="9" Margin="1" Columns="6" Grid.ColumnSpan="6" HorizontalAlignment="Stretch"  >
                                    <Label Content="Correos" HorizontalAlignment="Right" Margin="0,10,68.333,12"/>
                                    <!--<TextBox Height="25" x:Name="txtCorreo" Text="{Binding CorreoT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0,4,-39,3.667" />-->
                                    <TextBox Name="txtCorreo"  Grid.Column="1" Height="30"  Margin="-67.333,5,-7.333,5">
                                        <TextBox.Text>
                                            <Binding Path="CorreoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  >
                                                <Binding.ValidationRules>
                                                    <!--<local:ValidacionNIT x:Name="NitpersonaValidation3" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>-->
                                                    <local:ValidacionMenorQue NumeritoMenorIgualQue="60" NumeritoMayorQue="7" EsRequerido="False"  x:Name="Correovalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del correo electronico es incorrecta. maximo 60 minimo 7"/>
                                                    <local:ValidacionEmail x:Name="Correovalidation3" ValidatesOnTargetUpdated="True" Message="El correo electronico no es valido. Formato basico es [Aa-Zz@Aa-Zz.dominio]"/>
                                                    <local:TextBoxNoVacioValidationRule x:Name="correovalidation2" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <CheckBox Content="Es Principal" IsChecked="{Binding CorreoPrincipalChek}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="25.333,18,33,12" Height="24"/>
                                    <!--<Button Height="30" x:Name="cmdAgreCorreos" Content="Agregar" Margin="63.667,1,-59.667,1"  Command="{Binding cmdAgreCorreos_Click}" />-->
                                    <!--<Button  Height="40" Width="130" Margin="5,0,5,0"
                                    	x:Name="cmdAgreCorreos" 
                                    	Command="{Binding cmdAgreTelef_Click}" 
                                    	 
                                    	ToolTip="Agregar correo electronico" Opacity="0.9"   HorizontalAlignment="Left" >
                            <StackPanel Orientation="Horizontal" Width="120">
                                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                    <Rectangle 
                                                        Width="40"
                                                        Height="30"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_thumb_up_add}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <Canvas>
                                        -->
                                    <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                    <!--
                                    </Canvas>
                                    -->
                                    <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                    <!--
                                </StackPanel>
                                <TextBlock Margin="1" Width="55"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Agregar" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding (Validation.HasError), ElementName=txtTelef}" Value="false" />
                                                <Condition Binding="{Binding ElementName=cmbTipoTelefonos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>-->
                                    <Button  Height="40" Width="120"
                                 x:Name="cmdAgreCorreos" 
                                 Command="{Binding cmdAgreCorreos_Click}" 
                                 Margin="-22,5,40,5" 
                                 ToolTip="Agregar correo electronico" 
                                 Opacity="0.9" >
                                        <StackPanel Orientation="Horizontal" Width="120">
                                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                <Rectangle 
                                                        Width="30"
                                                        Height="27"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_thumb_up_add}" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Canvas>
                                                    <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                </Canvas>
                                                <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                            </StackPanel>
                                            <TextBlock Margin="1" Width="75"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Agregar" />
                                        </StackPanel>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=txtCorreo, Path=(Validation.HasError)}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>



                                    <!--<ComboBox Width="120" ItemsSource="{Binding SelectedChangedx.TheUsuariosPersonas.correos}" DisplayMemberPath="direccioncorreo"/>-->
                                    <ListBox x:Name="lstCorreos" Height="65" Width="180" 
                    		ItemsSource="{Binding ListadoCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    		DisplayMemberPath="direccioncorreo" 
                    		SelectedItem="{Binding SelectedCorreoAgregado, Mode=TwoWay}" Margin="-54.333,2,-10.333,2"/>
                                    <Button x:Name="cmdQuitCorreos" Grid.Column="8" Grid.Row="1" HorizontalAlignment="Center" Height="40"  
                                            
                                            Command="{Binding cmdQuitCorreos_Click}" 
                                            ToolTip="Elimina un correo del listado" Margin="0,5,2,5" >
                                        <StackPanel Orientation="Horizontal" Width="120">
                                            <StackPanel Style="{StaticResource StackPanelEstilo}" >
                                                <Rectangle 
                                                        Width="40"
                                                        Height="20"
                                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_email_minimal}" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Canvas>
                                                    <!--<Line X1="9" Y1="-4" X2="40" Y2="-22" Stroke="Black" StrokeThickness="4" />-->
                                                </Canvas>
                                                <!--<TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Quitar" />-->
                                            </StackPanel>
                                            <TextBlock Margin="1" Width="55"  TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Stretch"  Text="Eliminar" />
                                        </StackPanel>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=lstCorreos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <!--<Button 
                                Width="45" Height="30" x:Name="cmdQuitCorreos" 
                                Content="x" 
                                Style="{StaticResource AccentedSquareButtonStyle}"
                                Margin="85,8,8.667,13"  Command="{Binding cmdQuitCorreos_Click}" ToolTip="Eliminar un correo de la lista"/>-->
                                    <!--<Button Content="Quitar"  x:Name="cmdQuitCorreos"     Height="40"  Visibility="{Binding btnQuitCorreosVisible}" Command="{Binding cmdQuitCorreos_Click}" ToolTip="Elimina un correo del listado" Margin="17.333,7,4,7"  Width="120" Template="{DynamicResource btnEliminarCorreo}" BorderBrush="{DynamicResource AccentColorBrush}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=lstCorreos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>-->
                                </UniformGrid>



                                <!--************************************************-->
                                <!--<UniformGrid x:Name="GridTelefonos" Grid.Column="0" Grid.Row="8" Grid.ColumnSpan="6" Background="Silver" Columns="6" HorizontalAlignment="Stretch"  IsEnabled="{Binding HabilitarTelefonos}">
                                    <Label Content="Telefonos" HorizontalAlignment="Right" Margin="0,2,15.333,2.333" />
                                    <TextBox x:Name="txtTelef" Height="25"  Margin="-15.333,7,-0.333,7.333" >
                                        <Binding Path="TelefonoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                -->
                                <!--<local:ValidacionNIT x:Name="NitpersonaValidation3" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>-->
                                <!--
                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="9" NumeritoMayorIgualQue="8" EsRequerido="False"  x:Name="Telefonovalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del telefono permitida son 9 digitos incluyendo separador."/>
                                                <local:ValidacionTelefono x:Name="Telefonovalidation2" ValidatesOnTargetUpdated="True" Message="Ingrese un telefono con formato [7777-9999]. los telefonos solo pueden comenzar con 2,7,8 y 9"/>
                                                <local:TextBoxNoVacioValidationRule x:Name="TelefonoValidacion1" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>

                                    <ComboBox  Height="25" 
                                                       ItemsSource="{Binding ListadoTipoTelefono, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       Text="-Seleccione tipo telefono-" IsEditable="True" IsReadOnly="True"
                                                       DisplayMemberPath="descripciontt" 
                                                       SelectedValuePath="idtt" 
                                                       SelectedItem="{Binding SelectedTipoTelefono, Mode=TwoWay}" />
                                    
                                    <Button  Height="30" x:Name="cmdAgreTelef" Command="{Binding cmdAgreTelef_Click}" Content="Agregar"  FontWeight="Bold" ToolTip="Agregar correo electronico" Opacity="0.9" Background="#50119910">
                                        <Button.Effect>
                                            <DropShadowEffect BlurRadius="10"/>
                                        </Button.Effect>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=txtTelef, Path=(Validation.HasError)}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <ComboBox Height="30" x:Name="cmbTelefonos" ItemsSource="{Binding ListadoTelefonos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                      SelectedItem="{Binding SelectedTelefonoAgregado, Mode=TwoWay}"
                                                      Margin="4.667,1,-34.333,1" 
                                                      ItemTemplate="{StaticResource advancedComboxItemDataTemplate}"
                                                      ItemsPanel="{StaticResource advancedComboxItemsPanelTemplate}"/>

                                    <Button Height="25" x:Name="cmdQuitTelefono"  Command="{Binding cmdQuitTelefono_Click}" Margin="39.333,1,2,1">
                                        <Image Source="/SGPTmvvm;component/img/quitar.png"/>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=cmbTelefonos, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </UniformGrid>
                                <UniformGrid x:Name="GrdCorreos" IsEnabled="{Binding HabilitarGridCorreos}" Grid.Column="0" Grid.Row="9" Grid.ColumnSpan="6" Columns="6" Background="Silver" HorizontalAlignment="Stretch"  >
                                    <Label Content="Correos" HorizontalAlignment="Right" Margin="0,10,53.333,12"/>

                                    <TextBox Name="txtCorreo"  Grid.Column="1" Height="30"  Margin="-52.333,9,-22.333,11">
                                        <TextBox.Text>
                                            <Binding Path="CorreoT" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"  >
                                                <Binding.ValidationRules>
                                                    -->
                                <!--<local:ValidacionNIT x:Name="NitpersonaValidation3" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>-->
                                <!--
                                                    <local:ValidacionMenorQue NumeritoMenorIgualQue="30" NumeritoMayorQue="7" EsRequerido="False"  x:Name="Correovalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del correo electronico es incorrecta. maximo 30 minimo 7"/>
                                                    <local:ValidacionEmail x:Name="Correovalidation3" ValidatesOnTargetUpdated="True" Message="El correo electronico no es valido. Formato basico es [Aa-Zz@Aa-Zz.dominio]"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <CheckBox Content="Es Principal" IsChecked="{Binding CorreoPrincipalChek}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="28.333,16,6,10" Height="24"/>
                                    <Button  Height="30" 
                                         x:Name="cmdAgreCorreos" 
                                         Command="{Binding cmdAgreCorreos_Click}" 
                                         Content="Agregar" Margin="7,9,-2.667,11" 
                                         ToolTip="Agregar correo electronico" 
                                         Opacity="0.9" >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroFlatButton}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=txtCorreo, Path=(Validation.HasError)}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <ListBox x:Name="cmbCorreos" Height="49" 
                    		            ItemsSource="{Binding ListadoCorreos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                    		            DisplayMemberPath="direccioncorreo" 
                    		            SelectedItem="{Binding SelectedCorreoAgregado, Mode=TwoWay}" Margin="9.667,0,-74.333,0"/>
                                    <Button 
                                        x:Name="cmdQuitCorreos" 
                                        Content="x" 
                                        Style="{StaticResource AccentedSquareButtonStyle}"
                                        Margin="78.333,9,2,12"  Command="{Binding cmdQuitCorreos_Click}" ToolTip="Eliminar un correo de la lista"/>
                                </UniformGrid>-->


                                <!--<UniformGrid  x:Name="BotonesUno" Grid.Row="10" Columns="2"  HorizontalAlignment="Center"  Grid.RowSpan="1" Grid.ColumnSpan="2" Grid.Column="2" Margin="88.667,0.333,34,0" >

                                        <Button Grid.Column="4" x:Name="cmdGuardarDts"  
                                            Command="{Binding cmdGuardarDatos}" 
                                            Content="Guardar" 
                                            
                                            
                                            Width="120" 
                                            ToolTip="Guarda el nuevo cliente" 
                                            Opacity="0.9" Margin="3">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                    <Setter Property="IsEnabled" Value="false" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ElementName=txtRazonSocial, Path=(Validation.HasError)}" Value="false" />
                                                                <Condition Binding="{Binding ElementName=txtDireccion, Path=(Validation.HasError)}" Value="false" />
                                                                <Condition Binding="{Binding ElementName=txtNIT, Path=(Validation.HasError)}" Value="false" />
                                                                <Condition Binding="{Binding ElementName=txtNRC, Path=(Validation.HasError)}" Value="false" />
                                                                <Condition Binding="{Binding ElementName=txtPaginaWeb, Path=(Validation.HasError)}" Value="false" />

                                                                <Condition Binding="{Binding ElementName=txtBandera, Path=Text}" Value="1" />

                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbTipoEntidad}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbPaises}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbDepartamentos}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbActividadEc}" Value="True"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="true" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button  x:Name="cmdCancelarDtos" Command="{Binding cmdCancelarDatos}" Content="Cancelar" Margin="3"   ToolTip="Modificar." Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                        </Button>
                                        -->
                                <!--<Button x:Name="cmdConsultarUnox" Command="{Binding cmdConsultarUno}" Content="Consultar" Margin="3"   ToolTip="Consultar." Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                            -->
                                <!--<Button.Effect>
                                                <DropShadowEffect BlurRadius="10"/>
                                            </Button.Effect>-->
                                <!--
                                        </Button>

                                        <Button x:Name="cmdEliminarUno" Command="{Binding cmdEliminarUno}" Content="    Eliminar    " Margin="3"   ToolTip="Eliminar." Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                            -->
                                <!--<Button.Effect>
                                                <DropShadowEffect BlurRadius="10"/>
                                            </Button.Effect>-->
                                <!--
                                        </Button>-->
                                <!--
                                    </UniformGrid>-->


                            </Grid>

                        </Border>

                    </Grid>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding Path=MiComanditoDatosG}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TabItem>

                <!--********************************************Parte de Personal******************************************************-->
                <!--<TabItem IsEnabled="{Binding HabilitarTabPersonal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Para introducir el personal, es necesario guarde un nuevo cliente">-->
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <!--<Image Source="/SGPTmvvm;component/img/BulletRed2.png"/>-->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding Path=MiComanditoPersonal}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <!--<Image Source="/SGPTmvvm;component/img/BulletRed2.png"/>-->
                            <TextBlock Text="  Personal " Foreground="{DynamicResource IdealForegroundColorBrush}"  FontWeight="Bold"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"
					                 Margin="1" CornerRadius="0,0,0,0">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                            </Border.BitmapEffect>
                            <Grid  >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="360"/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>

                                <DataGrid x:Name="dGContactosz" Grid.Row="0" Margin="5,5,5,3"
                                                          AutoGenerateColumns="False" 
                                                          ItemsSource="{Binding ListadoContactosx, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                          HeadersVisibility="Column"
                                                          SelectedItem="{Binding SelectedContactox, Mode=TwoWay}" 
                                                          SelectionMode="Single"
                                                          CanUserAddRows="False"
                                                          CanUserDeleteRows="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding correlativo, Mode=TwoWay}"  Header="No." IsReadOnly="True" Width="50" MaxWidth="70" MinWidth="30"/>
                                        <DataGridTextColumn Binding="{Binding nombrecompleto, Mode=TwoWay}"  Header="Nombre" Width="200" MaxWidth="250" MinWidth="150" />
                                        <DataGridTextColumn Binding="{Binding nombrecargo, Mode=TwoWay}"  Header="Cargo" Width="165" MaxWidth="250" MinWidth="120"/>
                                        <DataGridTextColumn Binding="{Binding telefonos, Mode=TwoWay}"  Header="Telefono" Width="180" MaxWidth="250" MinWidth="120"/>
                                        <DataGridTextColumn Binding="{Binding correos, Mode=TwoWay}"  Header="Email" Width="150" MaxWidth="250" MinWidth="120"/>
                                    </DataGrid.Columns>
                                </DataGrid>

                                <!--<UniformGrid  Grid.Row="1" Columns="3"  HorizontalAlignment="Center"  Grid.RowSpan="1" >
                                    <Button  x:Name="cmdCrearPers" Command="{Binding cmdAgregarPersonal}" Content="Agregar" Margin="3"   ToolTip="crear." Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                    </Button>
                                    <Button x:Name="cmdConsultarPersonal" Command="{Binding cmdConsultarPersonal}" Content="Consultar" Margin="3"   ToolTip="Consultar" Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">

                                    </Button>

                                    <Button x:Name="cmdEliminarPers" Command="{Binding cmdEliminarPersonal}" Content="    Eliminar    " Margin="3"   ToolTip="Eliminar" Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                    </Button>
                                </UniformGrid>-->
                            </Grid>

                        </Border>
                    </Grid>

                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding Path=MiComanditoContactos}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                </TabItem>

                <!-- *******************************************Parte Sistema Contable*************************************************-->
                <!--<TabItem IsEnabled="{Binding HabilitarTabSistemaCont, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Para introducir el sistema, es necesario guardar el nuevo cliente">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            -->
                <!--<Image Source="/SGPTmvvm;component/img/BulletBlue.png"/>-->
                <!--
                            <TextBlock Text="  Sistema contable" Foreground="Black"  FontWeight="Bold"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding Path=MiComanditoContable}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>
                    </TabItem.Header>

                    <Grid>
                        
                            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"
					                 Margin="1" CornerRadius="0,0,0,0">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                                </Border.BitmapEffect>
                                <Grid Margin="1"  >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="45"/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition Height="50"/>

                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition />
                                        -->
                <!--<ColumnDefinition Width="160"/>-->
                <!--
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="txtBanderaCat" Grid.Row="0"  Text="{Binding txtBanderaCat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden" Margin="0,0,0,31" Grid.RowSpan="2"/>

                                    -->
                <!--<Label Content="* Activo:  " Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right"/>
                                    <Label Content="* Pasivo:  " Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right"/>
                                    <Label Content="* Patrimonio:  " Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right"/>
                                    -->
                <!--<Label Content="* Digitos de cuentas:  " Grid.Column="2" Grid.Row="2" HorizontalAlignment="Right"/>-->
                <!--
                                    <Label Content="* Tipo de cuentas de resultado:  " Grid.Column="0" Grid.Row="3" HorizontalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold"/>
                                    <Label Content="* Costos y gastos:  " Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right"/>
                                    <Label Content="* Ventas / Ingresos:  " Grid.Column="0" Grid.Row="5" HorizontalAlignment="Right"/>
                                    <Label Content="Cuentas de orden deudoras:  " Grid.Column="0" Grid.Row="6" HorizontalAlignment="Right"/>
                                    <Label Content="Cuentas de orden acreedoras:  " Grid.Column="0" Grid.Row="7" HorizontalAlignment="Right"/>
                                    <TextBox x:Name="txtActivo" Grid.Column="1" Grid.Row="0"  IsEnabled="False" Height="25" >
                                        <Binding Path="Razonsocialcliente" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <local:TextBoxNoVacioValidationRule x:Name="PrimerNombreValidationx"  ValidatesOnTargetUpdated="True" Message="Nombre Requerido"/>
                                                <local:ExcluirChar x:Name="PrimerNombreValidation2x"  ValidatesOnTargetUpdated="True" Message="El nombre contiene caracteres no permitidos."/>
                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="100" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="PrimerNombrevalidation4xf" ValidatesOnTargetUpdated="True" Message="La longitud maxima del nombre es 100"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <TextBox x:Name="txtPasivo" Grid.Column="1" Grid.Row="1"  IsEnabled="False" Height="25" >
                                        <Binding Path="Razonsocialcliente" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                -->
                <!--<local:TextBoxNoVacioValidationRule x:Name="PasivoValidationx"  ValidatesOnTargetUpdated="True" Message="Nombre Requerido"/>
                                                <local:ExcluirChar x:Name="PasivoValidation2x"  ValidatesOnTargetUpdated="True" Message="El nombre contiene caracteres no permitidos."/>
                                                <local:ValidacionMenorQue NumeritoMenorIgualQue="100" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="Pasivovalidation4xf" ValidatesOnTargetUpdated="True" Message="La longitud maxima del nombre es 100"/>-->
                <!--
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <TextBox Name="txtPatrimonio" Grid.Column="1" Grid.Row="2"  IsEnabled="False" Height="25">
                                        <TextBox.Text>
                                            <Binding Path="Direccionpersona" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                <Binding.ValidationRules>
                                                    -->
                <!--<local:ValidacionSoloDigitos x:Name="Noafppersonavalidation3"  ValidatesOnTargetUpdated="True" Message="Inserte un numero AFP valido de 12 digitos [999999999999]."/>-->
                <!--
                                                    <local:ValidacionMenorQue NumeritoMenorIgualQue="50" EsRequerido="False"  x:Name="Direccionpersonavalidation4x" ValidatesOnTargetUpdated="True" Message="La longitud de la direccion es incorrecta. maximo 50 Caracteres"/>
                                                    <local:ExcluirChar  NoPermitir="/;[]{}()*-+~^_=!@$%\'&lt;&gt;&amp;" x:Name="DireccionpersonaValidacion1x" ValidatesOnTargetUpdated="True" Message="La direccion contiene caracteres no permitidos"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox Name="txtCostIngresos" Grid.Column="1" Grid.Row="4" IsEnabled="False" Height="25">
                                        <TextBox.Text>
                                            <Binding Path="Nitpersona" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                <Binding.ValidationRules>
                                                    <local:ValidacionNIT x:Name="CostValidation3x" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>
                                                    <local:ValidacionMenorQue NumeritoMenorIgualQue="17" NumeritoMayorQue="16" EsRequerido="False"  x:Name="Costvalidation4x" ValidatesOnTargetUpdated="True" Message="La longitud del NIT es incorrecta. maximo 17 incluyendo separadores"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox Name="txtVentasIngresos" Grid.Column="1" Grid.Row="5" IsEnabled="False" Height="25">
                                        <TextBox.Text>
                                            <Binding Path="Nitpersona" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                <Binding.ValidationRules>
                                                    <local:ValidacionNIT x:Name="NitpersonaValidation3x" ValidatesOnTargetUpdated="True" Message="Digite un NIT valido con separadores. Ej: 0123-012345-012-1"/>
                                                    <local:ValidacionMenorQue NumeritoMenorIgualQue="17" NumeritoMayorQue="16" EsRequerido="False"  x:Name="Nitpersonavalidation4x" ValidatesOnTargetUpdated="True" Message="La longitud del NIT es incorrecta. maximo 17 incluyendo separadores"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox Name="txtCuentasDeudoras" Grid.Column="1" Grid.Row="6" Height="25" IsEnabled="false">
                                        <TextBox.Text>
                                            <Binding Path="Urlfirma" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                <Binding.ValidationRules>
                                                    <local:ValidacionMenorQue NumeritoMayorIgualQue="1" NumeritoMenorIgualQue="100" EsRequerido="False"  x:Name="PaginaWebvalidation4x" ValidatesOnTargetUpdated="True" Message="La longitud de la URL sobrepasa el limite permitido. maximo 100 Caracteres"/>
                                                    -->
                <!--<local:ExcluirChar  NoPermitir=";[]{}()*+~^_=!$%\'&lt;&gt;" x:Name="PaginaWebValidacion1" ValidatesOnTargetUpdated="True" Message="La URL contiene caracteres no permitidos"/>-->
                <!--
                                                    <local:ValidacionURL EsRequerido="False" ValidatesOnTargetUpdated="True" Message="La URL no es valida"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox Name="txt" Grid.Column="1" Grid.Row="7" Height="25" IsEnabled="False">
                                        <TextBox.Text>
                                            <Binding Path="Urlfirma" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                <Binding.ValidationRules>
                                                    <local:ValidacionMenorQue NumeritoMayorIgualQue="1" NumeritoMenorIgualQue="100" EsRequerido="False"  x:Name="PaginaWebvalidati4x" ValidatesOnTargetUpdated="True" Message="La longitud de la URL sobrepasa el limite permitido. maximo 100 Caracteres"/>
                                                    -->
                <!--<local:ExcluirChar  NoPermitir=";[]{}()*+~^_=!$%\'&lt;&gt;" x:Name="PaginaWebValidacion1" ValidatesOnTargetUpdated="True" Message="La URL contiene caracteres no permitidos"/>-->
                <!--
                                                    <local:ValidacionURL EsRequerido="False" ValidatesOnTargetUpdated="True" Message="La URL no es valida"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox> -->
                <!--


                                    <TextBlock x:Name="MessageSisCont" Text="{Binding MessageSistCont, Mode=TwoWay}" Grid.Row="0" Grid.Column="4" TextWrapping="Wrap" Margin="0,0,10,31" HorizontalAlignment="Right" VerticalAlignment="Bottom"   Grid.RowSpan="2"/>
                                    <Label Content="Periodo contable"               Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" Height="44" Margin="142.333,0,142,0.333" VerticalAlignment="Bottom"/>
                                    <Label Content="* Inicio:  "                    Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <Label Content=" /  "                           Grid.Column="1" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Label Content="* Fin:  "                       Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <Label Content=" /  "                           Grid.Column="1" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Label Content="* Digitos de cuentas:  "        Grid.Column="0" Grid.Row="4" HorizontalAlignment="Center" Grid.ColumnSpan="2" FontWeight="Bold" Height="34" Margin="141.333,0,143,39.333" VerticalAlignment="Bottom" Grid.RowSpan="2"/>
                                    <Label Content="* Digitos cuentas de mayor : "  Grid.Column="0" Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <Label Content="* Digitos rubros contables:  "  Grid.Column="0" Grid.Row="6" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <Label Content="Moneda:  "                      Grid.Column="0" Grid.Row="7" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <Label Content="Tipo estructura:  "             Grid.Column="0" Grid.Row="8" HorizontalAlignment="Right" VerticalAlignment="Center"/>


                                    <ComboBox  Height="25" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                                                       ItemsSource="{Binding ListitaDias , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       x:Name="cmbDiaInicio"
                                                       SelectedItem="{Binding SelectedDiaInicio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarCuentasMayor}" Margin="5,9.333,195.333,5" />
                                    <ComboBox  Height="25" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                                                       ItemsSource="{Binding ListitaMeses, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       x:Name="cmbMesInicio"
                                                       SelectedItem="{Binding SelectedMesInicio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarMunicipio}" Margin="201,10.333,0.333,4" />

                                    <ComboBox  Height="25" Grid.Column="1" Grid.Row="3" HorizontalAlignment="Stretch"
                                                       ItemsSource="{Binding ListitaDias , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       x:Name="cmbDiaFin"
                                                       SelectedItem="{Binding SelectedDiaFin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarCuentasMayor}" Margin="5,9.333,195.333,5" />
                                    <ComboBox  Height="25" Grid.Column="1" Grid.Row="3" HorizontalAlignment="Stretch"
                                                       ItemsSource="{Binding ListitaMeses , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       x:Name="cmbMesFin"
                                                       SelectedItem="{Binding SelectedMesFin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarMunicipio}" Margin="201,10.333,0.333,4" />

                                    <ComboBox  Height="25" Grid.Column="1" Grid.Row="5" HorizontalAlignment="Stretch"
                                                       ItemsSource="{Binding ListitaCantidadDigitos , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       x:Name="cmbDigitosCuentaMayor"
                                                       SelectedItem="{Binding SelectedCantDigitCtasMayor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarCuentasMayor}" Margin="0.333,9.667,63,9.333" />
                                    <ComboBox  Height="25" Grid.Column="1" Grid.Row="6" HorizontalAlignment="Stretch"
                                                       ItemsSource="{Binding ListitaCantidadDigitos , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       x:Name="cmbDigitosRubrosContables"
                                                       SelectedItem="{Binding SelectedCantDigitRubrosCont, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       IsEnabled="{Binding HabilitarMunicipio}" Margin="0.333,9.667,63,9.333" />


                                    <ComboBox  Height="25" Grid.Column="1" Grid.Row="7" HorizontalAlignment="Stretch"
                                                       ItemsSource="{Binding ListadoMonedas , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="nombremoneda" 
                                                       SelectedItem="{Binding SelectedMoneda, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       x:Name="cmbListadoMonedas" Margin="0.333,9.667,63,10" />

                                    <ComboBox  Height="25" Grid.Column="1" Grid.Row="8" HorizontalAlignment="Stretch"
                                                       ItemsSource="{Binding ListadoEstructuraEstFin , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       DisplayMemberPath="descripcioneef" 
                                                       SelectedItem="{Binding SelectedEstructuraEstFin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       x:Name="cmbListadoEstructura" Margin="0.333,10,63,9" />




                                    <UniformGrid  x:Name="Botonestres" Grid.Row="9" Columns="3"  HorizontalAlignment="Center"  Grid.RowSpan="5" Grid.ColumnSpan="4" >
                                        <Button Grid.Column="4" x:Name="cmdGuardarSco"  
                                            Command="{Binding cmdGuardarSistemaContable}" 
                                            Content="Guardar" 
                                            
                                            

                                            ToolTip="Guarda el sistema contable" 
                                            Opacity="0.9" Margin="3">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                                    <Setter Property="IsEnabled" Value="false" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ElementName=txtBanderaCat, Path=Text}" Value="1" />

                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbDiaInicio}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbDiaFin}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbMesInicio}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbMesFin}" Value="True"/>

                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbDigitosCuentaMayor}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbDigitosRubrosContables}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbListadoMonedas}" Value="True"/>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbListadoEstructura}" Value="True"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="true" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button  x:Name="cmdCancelarSistemaC" Command="{Binding cmdCancelarSistemaContable}" Content="Cancelar" Margin="3"   ToolTip="Modificar." Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                        </Button>
                                        <Button  x:Name="cmdCargarCat" Command="{Binding cmdCargarCatalogo}" IsEnabled="{Binding HabilitarCargarCatalogo}" Content="Cargar catalogo" Margin="3"   ToolTip="Permite cargar el catalogo de cuentas." Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" Width="150"/>


                                    </UniformGrid>

                                </Grid>

                            </Border>


                    </Grid>
                    -->
                <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding Path=MiComanditoEstructuraO}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                <!--
                </TabItem>-->

            </TabControl>
            <!--<Button Grid.Row="2" x:Name="cmdVolver" Command="{Binding CmdVolver}" Content="Volver" Width="90" Height="37" VerticalAlignment="Top"    ToolTip="Volver al menu principal." Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
            </Button>-->

        </Grid>

    </Grid>
</UserControl>
