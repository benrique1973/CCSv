<UserControl x:Class="SGPTWpf.SGPtmvvm.Recursos.Controles.menuFirmas"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SGPTWpf.Recursos.controles"
             
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 

             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"             
             
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="600">
    <UserControl.Resources>
        <!--Este Style RadioButtonList es para que puedan haber radiobottons bindiados-->
        <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="3" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border BorderThickness="0" Background="Transparent">
                                        <RadioButton 
                                            Focusable="False"
                                            IsHitTestVisible="False"
                                            IsChecked="{TemplateBinding IsSelected}">
                                            <ContentPresenter />
                                        </RadioButton>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ESte DataTemplate junto con el ItemPanelTemplate es para que puedan haber dos columnas o mas en un combobox personalizado-->
        <DataTemplate x:Key="advancedComboxItemDataTemplate">
            <Grid Width="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="A"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--DisplayMemberPath="numerotelefono"-->
                <TextBlock Text="{Binding numerotelefono}" Margin="5" Grid.Column="0" TextAlignment="Left"/>
                <TextBlock Text="{Binding descripciontelefono}" Margin="5" Grid.Column="1" TextAlignment="Left">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Path=IsSelected}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="advancedComboxItemsPanelTemplate">
            <StackPanel Grid.IsSharedSizeScope="True" IsItemsHost="True"/>
        </ItemsPanelTemplate>

        <!--Este conversor es para poder activar o desactivar botones usando el multiDataTrigger-->
        <!--<local:NotNullToBoolConverter x:Key="NotNullToBoolConverter"/>-->

        <!--Este sirve para darle formato a botones personalizados con imagenes-->
        <Style x:Key="BotonEstilo" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style
            x:Key="StackPanelEstilo"
            TargetType="StackPanel">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="2,0" />
        </Style>
    </UserControl.Resources>
    
    

    <Grid
        VerticalAlignment="Top"
        HorizontalAlignment="Stretch"
        Height="55"
        x:Name="Fondo"
        Background="Transparent" >
        <StackPanel Orientation="Horizontal">
            <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding cmdNuevoFirma_Click}" IsEnabled="{Binding HabilitarBtnNuevo}"
                Margin="0,0,0,-0.333" 
                ToolTip="Permite crear el registro de la firma si aun no existiera">
                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                    <Rectangle 
            			Width="45"
            			Height="25"
            			Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_app_plus}" AutoLayoutContent="True" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Nuevo" />
                </StackPanel>
            </Button>
            <Button
                 Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding cmdModificarFirma_Click}"
                IsEnabled="{Binding HabilitarBtnModificar}"
                ToolTip="Permite editar los datos de la firma">
                <StackPanel Style="{StaticResource StackPanelEstilo}">
                    <Rectangle Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Editar" />
                </StackPanel>
            </Button>


            <Button
               
                Command="{Binding cmdGuardarFirma_Click}" 

                ToolTip="Permite guardar los cambios">
                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                    <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_save}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"  Text="Guardar" />
                </StackPanel>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=txtBandera, Path=Text}" Value="1" />
                                    <Condition Binding="{Binding ElementName=txtIpConexionx, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtPuertoConexion, Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>


            </Button>
            <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding cmdCancelarFirma_Click}" 
                IsEnabled="{Binding HabilitarBtnCancelar}" >
                <StackPanel Style="{StaticResource StackPanelEstilo}">
                    <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_cancel}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Text="Cancelar" />
                </StackPanel>
            </Button>
            <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding cmdLogoFirma_Click}" 
                IsEnabled="{Binding HabilitarBtnLogo}"
                ToolTip="Permite Agregar/Cambiar el logotipo comercial de la firma">
                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                    <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_image}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Logotipo" />
                </StackPanel>
            </Button>
            

            <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XExcellCommand, Mode=TwoWay}" IsEnabled="False" >
                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                    <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_office_excel}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                </StackPanel>
            </Button>
            <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XWordCommand, Mode=TwoWay}" IsEnabled="false">
                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                    <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_office_word}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </StackPanel>
            </Button>
            <Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XPdfCommand, Mode=TwoWay}" IsEnabled="False">
                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                    <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_page_pdf}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="1" Width="49"  TextAlignment="Center" VerticalAlignment="Center" Text="Exportar" />
                </StackPanel>
            </Button>
            <!--<Button
                Style="{StaticResource AccentedSquareButtonStyle}"
                Command="{Binding XImprimirCommand, Mode=TwoWay}" >
                <StackPanel Style="{StaticResource StackPanelEstilo}" >
                    <Rectangle 
                        Width="45"
                        Height="25"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_printer_blank}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="1" Width="45"  TextAlignment="Center" VerticalAlignment="Center" Text="Imprimir" />
                </StackPanel>
            </Button>-->
        </StackPanel>
    </Grid>
</UserControl>




