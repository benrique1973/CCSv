<Controls:MetroWindow x:Class="SGPTmvvm.Modales.CRUDRolesView"
                         xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales"
                         xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
                         mc:Ignorable="d" 
                         SizeToContent="WidthAndHeight"
                         x:Name="root" 
                         ShowInTaskbar="True"
                         ResizeMode="CanMinimize"
                         WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      Dialog:DialogParticipation.Register="{Binding}"
                      xmlns:helpers="clr-namespace:SGPTWpf.Helpers"
                      Icon="/SGPtWpf/Recursos/Imagenes/Iconos/CCSV2.png"
                      helpers:DialogCloser.DialogResult="{Binding CloseWindowFlag}"                      
                      ShowTitleBar="True" 
                      Title="Gestion de Roles"
                      
                      IsMaxRestoreButtonEnabled="False"
                      IsCloseButtonEnabled="True"
                      IsMinButtonEnabled="True"
                      SaveWindowPosition="False"
                      WindowTransitionsEnabled="True"
                      EnableDWMDropShadow="True"    >
    <!--<Window      x:Class="SGPTmvvm.Modales.CRUDRolesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales"
             xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             xmlns:Soporte="clr-namespace:Soporte"
             mc:Ignorable="d" 
             d:DesignHeight="416.667" d:DesignWidth="450"
             x:Name="root" 
             ShowInTaskbar="False"
             ResizeMode="NoResize"
             Loaded="Window_Loaded"
             WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow">-->

    <Window.Resources>
        <!--<Image x:Key="Agregar" Source="img/tres.jpg"/>
        <Image x:Key="Agregar2" Source="img/cuatro.jpg"/>-->
        
        <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
        </Style>
        <local:NotNullToBoolConverter x:Key="NotNullToBoolConverter"/>
    </Window.Resources>

    
    <Grid>
        <!--<Soporte:Throbber Visibility="{Binding ThrobberVisible}" RenderTransformOrigin="-2.117,0.017" />-->
        <!--<Soporte:Throbber Grid.Column="1" HorizontalAlignment="Center" Margin="21,127,0,0" VerticalAlignment="Top" Visibility="{Binding ThrobberVisible}" RenderTransformOrigin="-2.117,0.017"/>-->

        <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2" 
					CornerRadius="0,0,0,0" VerticalAlignment="Stretch" Margin="1">
                <Border.BitmapEffect>
                    <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                </Border.BitmapEffect>

                <Grid Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="300"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <TextBlock x:Name="MessageTextBlock" Grid.Row="0" Text="{Binding Message}" TextWrapping="Wrap" Margin="5" HorizontalAlignment="Center" FontSize="20" />
                    <!--<ProgressBar Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Name="BarraProgreso"  IsIndeterminate="True"  Height="22" Margin="21,357,0,0" VerticalAlignment="Top" Width="100" Minimum="-10" Maximum="10"/>-->
                    <UniformGrid Grid.Row="1" Grid.Column="0"  Margin="3" Columns="6" HorizontalAlignment="Stretch" VerticalAlignment="Top" >

                        <Label Content="* Nombre rol" FontSize="15" HorizontalAlignment="Right" />
                        <!--<TextBox x:Name="txtNombreRol" Text="{Binding NombreRol, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Height="25" IsReadOnly="True" />-->
                        <TextBox x:Name="txtNombreRol" IsEnabled="{Binding HabilitartxtNombreRol}" Height="30" Margin="0,2,-0.333,2.333">
                            <Binding Path="NombreRol" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                <Binding.ValidationRules>
                                    <local:TextBoxNoVacioValidationRule x:Name="NombreRolValidacion1"  ValidatesOnTargetUpdated="True" Message="Nombre rol Requerido"/>
                                    <local:ExcluirChar x:Name="NombreRolValidacion2"  ValidatesOnTargetUpdated="True" Message="El nombre del rol contiene caracteres no permitidos."/>
                                    <local:ValidacionMenorQue NumeritoMenorIgualQue="20" NumeritoMayorIgualQue="2" EsRequerido="True"  x:Name="NombreRolvalidacion3" ValidatesOnTargetUpdated="True" Message="La longitud maxima del nombre del rol es 20"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>

                        <Label  Content="* Descripcion" FontSize="15" HorizontalAlignment="Right"/>
                        <!--<TextBox  x:Name="txtRolRol" Text="{Binding DescripcionRol, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Height="25" IsReadOnly="True"/>-->
                        <TextBox x:Name="txtDescripcionRol" IsEnabled="{Binding HabilitartxtDescripcionRol}" Height="30" Margin="0,2,-0.333,2.333">
                            <Binding Path="DescripcionRol" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                <Binding.ValidationRules>
                                    <local:TextBoxNoVacioValidationRule x:Name="DescripcionRolValidation"  ValidatesOnTargetUpdated="True" Message="Descripcion del rol Requerido"/>
                                    <local:ExcluirChar x:Name="DescripcionRolValidation2"  ValidatesOnTargetUpdated="True" Message="La descripcion del rol contiene caracteres no permitidos."/>
                                    <local:ValidacionMenorQue NumeritoMenorIgualQue="30" NumeritoMayorIgualQue="2" EsRequerido="True"  x:Name="DescripcionRolvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima del nombre de la descripcion del rol es 30"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox>

                        <Label Content="* Basado en" FontSize="15" HorizontalAlignment="Right" />
                        <!--<TextBox x:Name="txtNombreRol" Text="{Binding NombreRol, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Height="25" IsReadOnly="True" />-->
                        <ComboBox  x:Name="cmbRolesSistema" IsEnabled="{Binding HabilitarcmbRolesSistema}" Text="--Seleccione un rol--" IsEditable="True" IsReadOnly="True" 
                                   ItemsSource="{Binding ListadoRolesSistema, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                   DisplayMemberPath="nombrerol" 
                                   SelectedItem="{Binding SelectedRolSistema, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   Height="30"/>
                    </UniformGrid>

                <!--ItemsSource="{Binding permisosRolesRol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
                <!--SelectedItem="{Binding SelectedUsuariosRol, Mode=TwoWay}"-->
                <DataGrid x:Name="dGRoles" Grid.Row="2" Grid.Column="0"
    			    AutoGenerateColumns="False"
    			    ItemsSource="{Binding permisitosRolesRolView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    			    HeadersVisibility="Column"
    			    
    			    SelectionMode="Single"
    			    CanUserAddRows="False"
    			    CanUserDeleteRows="False"
                    IsReadOnly="{Binding HabilitarGridRoles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"          
                          Margin="2">
                        <DataGrid.Resources>
                            <Style TargetType="CheckBox" x:Key="style">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding HasMaxNumberReached, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true"/>
                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                                <!--<EventSetter Event="CheckBox.Checked" Handler="OnCheck" />
                                <EventSetter Event="CheckBox.Unchecked" Handler="OnCheck" />-->
                                <!--<EventSetter Event="CheckBox.Unchecked" Handler="DataGridCheckBoxColumn_Checked" />-->
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Binding="{Binding idor, Mode=TwoWay}"  Header="ID" IsReadOnly="True"/>-->
                            <DataGridTextColumn Binding="{Binding nombreopcionor, Mode=TwoWay}"  Header="Nombre opcion" Width="250" MaxWidth="255" MinWidth="200" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding menuor, Mode=TwoWay}" Header="Menu" Width="100" MaxWidth="110" MinWidth="80" IsReadOnly="True"/>
                            <!--<DataGridTextColumn x:Name="isss"  Binding="{Binding ThePermisosRolesUsuarios.crearpru, Mode=TwoWay}"  Header="Can Create" Width="200"/>-->
                            <!--<DataGridCheckBoxColumn Header="Online Order?" IsThreeState="True" Binding="{Binding ThePermisosRolesUsuarios.crearprue}" />-->

                            <DataGridCheckBoxColumn x:Name="puedeCrear"  Header="Crear" Width="75"
                                    Binding="{Binding crearor, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding HabilitarPuedeCrear}"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}">
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn x:Name="puedeEliminar"  Header="Eliminar" Width="80"
                                    Binding="{Binding eliminaror, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding HabilitarPuedeEliminar}"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}">
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn x:Name="puedeConsultar"  Header="Consultar" 
                                    Binding="{Binding consultaror, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding HabilitarPuedeConsultar}"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn x:Name="puedeEditar"  Header="Editar" 
                                    Binding="{Binding editaror, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding HabilitarPuedeEditar}"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn x:Name="puedeImprimir"  Header="Imprimir" 
                                    Binding="{Binding impresionor, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding HabilitarPuedeImprimir}"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn x:Name="puedeExportar"  Header="Exportar" 
                                    Binding="{Binding exportacionor, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding HabilitarPuedeExportar}"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn x:Name="puedeRevisar"  Header="Revisar" 
                                    Binding="{Binding  revisaror, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding HabilitarPuedeRevisar}"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn x:Name="puedeAprobar"  Header="Aprobar" 
                                    Binding="{Binding aprobaror, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding HabilitarPuedeAprobar}"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                            </DataGridCheckBoxColumn>

                        </DataGrid.Columns>
                        <DataGrid.GroupStyle>
                            <GroupStyle>

                                <!--<GroupStyle.HeaderTemplate>
							<DataTemplate>
								<DockPanel Background="Red">
									<TextBlock Text="{Binding Path=Name}"
										Foreground="Red" Margin="30,0,0,0" Width="150" />
								</DockPanel>
							</DataTemplate>
						</GroupStyle.HeaderTemplate>-->

                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}" >
                                        <Setter Property="Margin" Value="1,1,5,15" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                    <Expander
												BorderBrush="Black"
												IsExpanded="False"
												Background="{DynamicResource AccentColorBrush}"
                                                
												BorderThickness="1,1,1,3">
                                                        <Expander.Header>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock VerticalAlignment="Center"
															FontWeight="Bold"
															Text="{Binding Path=Name}"
															Width="100" />
                                                                <TextBlock VerticalAlignment="Center"
															Text="Cantidad registros: " />
                                                                <TextBlock FontWeight="Bold"
															Text="{Binding ItemCount}" />
                                                            </StackPanel>
                                                        </Expander.Header>
                                                        <Expander.Content>
                                                            <ItemsPresenter />
                                                        </Expander.Content>
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>


                            </GroupStyle>
                        </DataGrid.GroupStyle>

                    </DataGrid>


                    <UniformGrid Grid.Column="2" Grid.Row="3" Margin="5" Columns="3" HorizontalAlignment="Center"
								 VerticalAlignment="Stretch">
                        <!--<Button Grid.Column="4" x:Name="cmdGuardarRolx"  Content="   Guardar   " Margin="5" FontSize="16"  ToolTip="Guarda las modificaciones a los permisos de roles en la base de datos" Opacity="0.9" Background="#FFC0D4EA" Command="{Binding cmdGuardar_Click}">
                            <Button.Effect>
                                <DropShadowEffect BlurRadius="10"/>
                            </Button.Effect>
                        </Button>-->
                        <Button Grid.Column="4" x:Name="cmdGuardar"   Command="{Binding cmdGuardar_Click}" Content="Guardar" Width="150" Margin="15,0,0,0" FontSize="16"  ToolTip="Guarda el nuevo rol en la base de datos" >
                            <!--<Button.Effect>
                                <DropShadowEffect BlurRadius="20"/>
                            </Button.Effect>-->
                            <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=txtNombreRol, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtDescripcionRol, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding HabilitartxtNombreRol, Mode=TwoWay}" Value="true"/>
                                                <Condition Binding="{Binding ElementName=cmbRolesSistema, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    <Button x:Name="cmdRestablecerRol" IsEnabled="{Binding HabilitarCmdRestablecer}" Content="Restablecer" Width="150" FontSize="16"  ToolTip="Restablecer el rol a su estado original" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" Command="{Binding cmdRestablecer_Click}"/>
                    <Button x:Name="cmdCancelarRolx"  Content="Cancelar"  Width="150" FontSize="16" Margin="20,0,0,0" ToolTip="Cancela la modificacion de permisos de roles" Command="{Binding cmdCancelar_Click}">
                            <!--<Button.Effect>
                                <DropShadowEffect BlurRadius="20"/>
                            </Button.Effect>-->
                            <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding HabilitarBotonCancelar, Mode=TwoWay}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>



                    </UniformGrid>
                    <Grid Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        
                        <!--<ProgressBar x:Name="Barrita" Height="15" Value="{Binding Path=valorBarrita, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsIndeterminate="False"  Grid.Row="4" Visibility="{Binding Path=BarraProgresoVisible, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Minimum="0" Maximum="100"/>-->
                        <ProgressBar Grid.Row="0" Value="{Binding ValorDejarseVer, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged }" IsIndeterminate="False" Visibility="{Binding DejarseVer, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged }"/>
                        <TextBlock x:Name="ProgressTextBlock" Grid.Row="1" Text="{Binding valorProgresoTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Margin="5" HorizontalAlignment="Center" FontSize="14" Foreground="Green"/>
                        <!--<Button Grid.Column="2" x:Name="aceptar" Content='Aceptar' Command="{Binding Acepte}"/>
                        <Button Grid.Column="3" x:Name="declinar" Content='Declinar' Command="{Binding NoAcepte}"/>-->
                    </Grid>
                </Grid>
            </Border>

    </Grid>
</Controls:MetroWindow>