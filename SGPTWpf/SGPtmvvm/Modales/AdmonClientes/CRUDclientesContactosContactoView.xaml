<Controls:MetroWindow x:Class="SGPTmvvm.Modales.AdmonClientes.CRUDclientesContactosContactoView"
                         xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
                         mc:Ignorable="d" 
                         d:DesignHeight="500" d:DesignWidth="800"
                         x:Name="root" 
                         ShowInTaskbar="True"
                         ResizeMode="CanMinimize"
                         WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      Dialog:DialogParticipation.Register="{Binding}"
                      xmlns:helpers="clr-namespace:SGPTWpf.Helpers"
                      helpers:DialogCloser.DialogResult="{Binding CloseWindowFlag}"   
                      xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales"
                      xmlns:Soporte="clr-namespace:SGPTmvvm.Soporte" 
                      ShowTitleBar="True" 
                      Title="Contactos del cliente"
                      Icon="/SGPtWpf/Recursos/Imagenes/Iconos/CCSV2.png"
                      IsMaxRestoreButtonEnabled="True"
                      IsCloseButtonEnabled="True"
                      IsMinButtonEnabled="True"
                      SaveWindowPosition="False"
                      WindowTransitionsEnabled="True"
                      EnableDWMDropShadow="True"    >
    <Control.Resources>
        <!--Este conversor es para poder activar o desactivar botones usando el multiDataTrigger-->
        <local:NotNullToBoolConverter x:Key="NotNullToBoolConverter"/>

    </Control.Resources>

    <Grid>
            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"  
					CornerRadius="0,0,0,0" Margin="1" >
                <!--Black-->
                <Border.BitmapEffect>
                    <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="370" ShadowDepth="0.7" />
                    <!--Black-->
                </Border.BitmapEffect>
                <Grid Margin="2,5,2,2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>

                        <RowDefinition Height="50"/>
                        <RowDefinition Height="15"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="180"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="180"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>


                    <TextBlock x:Name="MessageTextBlock" Text="{Binding Message, Mode=TwoWay}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" TextWrapping="Wrap" Margin="0,7,10,0" HorizontalAlignment="Center" FontSize="20" />

                    <!--Sirve para activar el boton guardar no borrar-->
                    <TextBox Name="txtBanderax" Text="{Binding txtBandera, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden"/>
                <Label Content="Cliente:  " FontSize="14"     HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                <TextBlock x:Name="MessageTextCliente" Text="{Binding MessageCliente, Mode=TwoWay}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" TextWrapping="Wrap" Margin="1" HorizontalAlignment="Left" FontSize="14" />
                <Label Content="* Nombre contacto:  " FontSize="14"     HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                    <Label Content="* Apellidos contacto:  " FontSize="14"  HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2" Grid.Row="2"/>
                    <Label Content="* Telefono:   " FontSize="14"           HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Column="0" Grid.Row="3"/>
                    <Label Content="* Celular:   " FontSize="14"            HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Column="2" Grid.Row="3"/>
                    <Label Content="* Email:   " FontSize="14"              HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Column="0" Grid.Row="4"/>
                    <Label Content=" Cargo ocupado:   " FontSize="14"       HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="5"/>
                    <Label Content=" Fecha inicio:   " FontSize="14"        HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="6"/>
                    <!--<Label Content=" Dependencia jerarquica:   " FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Grid.Row="6"/>-->
                    <Label Content=" Observaciones:   " FontSize="14"       HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="7"/>

                    <TextBox x:Name="txtNombreContacto" Grid.Column="1" Grid.Row="2" IsEnabled="{Binding HabilitartxtNumeroCorrespondencia}" Height="25" 
                             Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Ingrese nombre del contacto">
                        <Binding Path="Nombrescontacto" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <local:TextBoxNoVacioValidationRule x:Name="numerocorrexValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                <local:ExcluirChar x:Name="numerocorreValidation2"  ValidatesOnTargetUpdated="True" Message="Nombre contiene caracteres no permitidos."/>
                                <local:ValidacionMenorQue NumeritoMenorIgualQue="25" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="numercorrexvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima es 10"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                    <TextBox x:Name="txtApellidosContacto" Grid.Column="3" Grid.Row="2" IsEnabled="{Binding HabilitartxtNumeroCorrespondencia}" Height="25" 
                             Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Ingrese apellidos del contacto">
                        <Binding Path="Apellidoscontacto" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <local:TextBoxNoVacioValidationRule x:Name="apexValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                <local:ExcluirChar x:Name="apeValidation2"  ValidatesOnTargetUpdated="True" Message="Apellidos contiene caracteres no permitidos."/>
                                <local:ValidacionMenorQue NumeritoMenorIgualQue="25" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="apevalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima es 10"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                    <TextBox x:Name="txtTelefonoContacto" Grid.Column="1" Grid.Row="3" IsEnabled="{Binding HabilitartxtNumeroCorrespondencia}" Height="25" 
                             Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Ingrese telefonos del contacto">
                        <Binding Path="Telefono" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <local:ValidacionMenorQue NumeritoMenorIgualQue="9" NumeritoMayorIgualQue="8" EsRequerido="False"  x:Name="Telefonovalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del telefono permitida son 9 digitos incluyendo separador."/>
                                <local:ValidacionTelefono x:Name="Telefonovalidation2" ValidatesOnTargetUpdated="True" Message="Ingrese un telefono con formato [2222-9999]. los telefonos solo pueden comenzar con 2,7,8 y 9"/>
                                <local:TextBoxNoVacioValidationRule x:Name="TelefonoValidacion1" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                    <TextBox x:Name="txtCelularContacto" Grid.Column="3" Grid.Row="3" IsEnabled="{Binding HabilitartxtNumeroCorrespondencia}" Height="25" 
                             Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Ingrese numero celular del contacto">
                        <Binding Path="Celular" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <local:ValidacionMenorQue NumeritoMenorIgualQue="9" NumeritoMayorIgualQue="8" EsRequerido="False"  x:Name="Celularvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del telefono permitida son 9 digitos incluyendo separador."/>
                                <local:ValidacionTelefono x:Name="Celularvalidation2" ValidatesOnTargetUpdated="True" Message="Ingrese un telefono con formato [2222-9999]. los telefonos solo pueden comenzar con 2,7,8 y 9"/>
                                <local:TextBoxNoVacioValidationRule x:Name="CelularValidacion1" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                    <TextBox x:Name="txtEmailContacto" Grid.Column="1" Grid.Row="4"  Height="25" Grid.ColumnSpan="1"
                             Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Ingrese E-mail del contacto">
                        <Binding Path="Email" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <local:ValidacionMenorQue NumeritoMenorIgualQue="30" NumeritoMayorQue="7" EsRequerido="False"  x:Name="Correovalidation4" ValidatesOnTargetUpdated="True" Message="La longitud del correo electronico es incorrecta. maximo 30 minimo 7"/>
                                <local:ValidacionEmail x:Name="Correovalidation3" ValidatesOnTargetUpdated="True" Message="El correo electronico no es valido. Formato basico es [Aa-Zz@Aa-Zz.dominio]"/>
                                <local:TextBoxNoVacioValidationRule x:Name="correovalidation2" ValidatesOnTargetUpdated="True" Message="Dato requerido" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                    <ComboBox  x:Name="cmbCargo" IsEnabled="{Binding HabilitarcmbUsuarioRecibe}" Text="--Seleccione un cargo--" IsEditable="True" IsReadOnly="True" 
                                   ItemsSource="{Binding ListadoEstructuraO, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                   DisplayMemberPath="nombrecargoeo" 
                                   SelectedItem="{Binding SelectedEstructuraO, Mode=Default, UpdateSourceTrigger=PropertyChanged}"
                                   Height="30" Grid.Column="1" Grid.Row="5" />
                <Button Grid.Column="2" Grid.Row="5" x:Name="cmdCrearCargo" Command="{Binding cmdNuevoCargo_Click}" Content="Nuevo cargo"  FontSize="16"  Opacity="0.9" Background="{DynamicResource AccentColorBrush}" ToolTip="Permite crear un nuevo puesto" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" VerticalAlignment="Top" Width="120" Margin="15,10,5,5">
                        <!--<Button.Effect>
                            <DropShadowEffect BlurRadius="20"/>
                        </Button.Effect>-->
                    </Button>
                    <DatePicker x:Name="dpickFechaInicio" IsEnabled="{Binding HabilitardpickFechaInicial}"
                                    DisplayDate="{Binding DateTime.Now()}" 
                                    Focusable="False" 
                                    SelectedDate="{Binding Fechainiciofuncioncontacto, Mode=TwoWay}" 
                                    Height="25" Grid.Column="1" Grid.Row="6" />
                    <TextBox x:Name="txtObservaciones" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="7" IsEnabled="{Binding HabilitartxtAsuntoCorrespondencia}" Height="25" 
                             Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Ingrese observaciones">
                        <Binding Path="Observaciones" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <!--<local:TextBoxNoVacioValidationRule x:Name="ObserValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>-->
                                <local:ExcluirChar x:Name="ObservValidation2"  ValidatesOnTargetUpdated="True" Message="Observaciones contiene caracteres no permitidos."/>
                                <local:ValidacionMenorQue NumeritoMenorIgualQue="250" NumeritoMayorIgualQue="1" EsRequerido="False"  x:Name="AsuntoCartaxvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima es 250"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>

                    <UniformGrid Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="4" Columns="2" HorizontalAlignment="Center" Margin="1,1,1,1">
                    <Button Grid.Column="4" x:Name="cmdGuardar"  Command="{Binding cmdGuardar_Click}" CommandParameter="{Binding ElementName=txtContraseña}" Content="Guardar" FontSize="16"  ToolTip="Guarda la correspondencia en la base de datos" Opacity="0.9" VerticalAlignment="Top" Width="100" Margin="15,5,5,5" >

                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=txtBanderax, Path=Text}" Value="1" />
                                                <!--<Condition Binding="{Binding ElementName=txtObservaciones, Path=Text}" Value="1" />-->
                                                <Condition Binding="{Binding ElementName=txtNombreContacto, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtApellidosContacto, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtTelefonoContacto, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtCelularContacto, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtEmailContacto, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtObservaciones, Path=(Validation.HasError)}" Value="false" />

                                                <Condition Binding="{Binding ElementName=cmbCargo, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>

                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    <Button x:Name="cmdCancelar" Command="{Binding cmdCancelar_Click}" Content="Cancelar"  FontSize="16"  Opacity="0.9" Background="{DynamicResource AccentColorBrush}" ToolTip="Ignora los cambios y permite salir" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" VerticalAlignment="Top" Width="100" Margin="15,5,5,5">
                            <!--<Button.Effect>
                                <DropShadowEffect BlurRadius="20"/>
                            </Button.Effect>-->
                        </Button>
                    </UniformGrid>
                </Grid>
            </Border>
    </Grid>
</Controls:MetroWindow>