<Controls:MetroWindow x:Class="SGPTmvvm.Modales.AdmonClientes.CargarCatalogoClientesExpedientes"
                         xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
                         mc:Ignorable="d" 
                         d:DesignHeight="550" d:DesignWidth="900"
                         x:Name="root" 
                         ShowInTaskbar="True"
                         ResizeMode="CanMinimize"
                         WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      Dialog:DialogParticipation.Register="{Binding}"
                      xmlns:helpers="clr-namespace:SGPTWpf.Helpers"
                      helpers:DialogCloser.DialogResult="{Binding CloseWindowFlag}"   
                      xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales"
                      xmlns:Soporte="clr-namespace:SGPTmvvm.Soporte" 
                      ShowTitleBar="True" 
                      Icon="/SGPtWpf/Recursos/Imagenes/Iconos/CCSV2.png"
                      Title="Carga de catalogo de cuentas cliente"
                      
                      IsMaxRestoreButtonEnabled="True"
                      IsCloseButtonEnabled="True"
                      IsMinButtonEnabled="True"
                      SaveWindowPosition="False"
                      WindowTransitionsEnabled="True"
                      EnableDWMDropShadow="True"    >
    <Control.Resources>
        <!--Este conversor es para poder activar o desactivar botones usando el multiDataTrigger-->
        <!--<local:NotNullToBoolConverter x:Key="NotNullToBoolConverter"/>-->

    </Control.Resources>

    <Grid>
            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"  
					CornerRadius="0,0,0,0" Margin="1" >
                <!--Black-->
                <Border.BitmapEffect>
                    <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="370" ShadowDepth="0.7" />
                    <!--Black-->
                </Border.BitmapEffect>
                <Grid Margin="2,5,2,2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45"/>
                        <RowDefinition Height="75"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="15"/>
                    </Grid.RowDefinitions>

                       <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition/>
                            <!--<ColumnDefinition Width="180"/>
                            <ColumnDefinition/>-->
                        </Grid.ColumnDefinitions>
                        

                        <TextBlock x:Name="MessageTextBlock" Text="{Binding Message, Mode=TwoWay}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" TextWrapping="Wrap" Margin="1,7,1,0" HorizontalAlignment="Left" FontSize="14"/>
                        
                        <!--Sirve para activar el boton guardar no borrar-->
                        <TextBox Grid.Column="0" Grid.Row="1" Name="txtBanderax" Text="{Binding txtBandera, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden"/>
                        
                    <Button Grid.Column="0" Grid.Row="0" x:Name="cmdCargarCat" IsEnabled="{Binding HabilitarcmdCargarCat, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="160" Height="35" Command="{Binding cmdCargarCat_Click}" Content="Cargar catalogo" Margin="1" FontSize="16"  Opacity="0.9" Background="{DynamicResource AccentColorBrush}" ToolTip="Busca un catalogo de cuentas a partir de un archivo de excel." Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}"/>
                       
                    <TextBox x:Name="txtNombreCatalogo" Grid.Column="1" Grid.Row="0" IsEnabled="{Binding HabilitartxtNombreCatalogo}" Height="30" IsReadOnly="True" Margin="0,8,166,7.333">
                        <Binding Path="NombreCatalogo" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <!--<local:TextBoxNoVacioValidationRule x:Name="numerocorrexValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                <local:ExcluirChar x:Name="numerocorreValidation2"  ValidatesOnTargetUpdated="True" Message="Cargo contiene caracteres no permitidos."/>
                                <local:ValidacionMenorQue NumeritoMenorIgualQue="20" NumeritoMayorIgualQue="3" EsRequerido="True"  x:Name="numercorrexvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima es 10"/>-->
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                    <Button Grid.Column="1" Grid.Row="0" IsEnabled="{Binding HabilitarValidarCatalogo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" x:Name="cmdValidar" Width="160" Height="35" Command="{Binding cmdValidarCat_Click}" Content="Validar catalogo" Margin="1" FontSize="16"  Opacity="0.9" Background="{DynamicResource AccentColorBrush}" ToolTip="Valida o normaliza el catalogo. Emite una alerta si el catalogo es invalido." Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}"/>
                    <DataGrid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Grid.RowSpan="5" 
                              ItemsSource="{Binding dtGrd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              AutoGenerateColumns="True" IsReadOnly="False" HorizontalAlignment="Stretch" x:Name="dtGrid" VerticalAlignment="Stretch"  
                              CanUserDeleteRows="true" 
                              CanUserReorderColumns="False"/>
                    <!--<ComboBox  x:Name="cmbDependencia" IsEnabled="{Binding HabilitarcmbUsuarioRecibe}" Text="-Seleccione un nivel superior-" IsEditable="True" IsReadOnly="True" 
                                   ItemsSource="{Binding estructuraOListado, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                   DisplayMemberPath="nombrecargoeo" 
                                   SelectedItem="{Binding SelectedEstructuraO, Mode=Default, UpdateSourceTrigger=PropertyChanged}"
                                   Height="30" Grid.Column="1" Grid.Row="2" />
                    
                    <TextBox x:Name="txtResponsabilidades" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="3" IsEnabled="{Binding HabilitartxtAsuntoCorrespondencia}" Height="25" 
                             Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Ingrese responsabilidades">
                        <Binding Path="Responsabilidadeo" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <local:TextBoxNoVacioValidationRule x:Name="AsuntoCartaxValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                                <local:ExcluirChar x:Name="AsuntoCartaValidation2"  ValidatesOnTargetUpdated="True" Message="Tarea contiene caracteres no permitidos."/>
                                <local:ValidacionMenorQue NumeritoMenorIgualQue="100" NumeritoMayorIgualQue="1" EsRequerido="True"  x:Name="AsuntoCartaxvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima es 100"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>

                    <Soporte:MultiSelectComboBox x:Name="cmbOtrasFunciones"
                                                 HorizontalAlignment="Left" Grid.Row="4" VerticalAlignment="Center" Width="316" Height="30" 
                                                 DefaultText="Seleccione otras funciones" 
                                                 ItemsSource="{Binding otrasFuncionesListad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                 SelectedItems="{Binding SelecteOtrasFunciones, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Grid.Column="1"/>-->                   
                    <UniformGrid Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Columns="2" HorizontalAlignment="Center" Margin="1,1,1,1">
                        <Button Grid.Column="4" x:Name="cmdGuardar"  Command="{Binding cmdGuardar_Click}" CommandParameter="{Binding ElementName=txtContraseña}" Content="         Guardar         " Margin="1" FontSize="16"  ToolTip="Guarda la correspondencia en la base de datos" Opacity="0.9" Background="{DynamicResource AccentColorBrush}">
                            <!--<Button.Effect>
                                <DropShadowEffect BlurRadius="20"/>
                            </Button.Effect>-->
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=txtBanderax, Path=Text}" Value="1" />
                                                <!--<Condition Binding="{Binding ElementName=txtObservaciones, Path=Text}" Value="1" />-->
                                                <!--<Condition Binding="{Binding ElementName=txtNombreCargo, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtResponsabilidades, Path=(Validation.HasError)}" Value="false" />-->
                                                
                                                <!--<Condition Binding="{Binding ElementName=cmbDependencia, Path=SelectedItem, Converter={StaticResource NotNullToBoolConverter}}" Value="True"/>-->
                                               
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Grid.Column="5" x:Name="cmdCancelar" Command="{Binding cmdCancelar_Click}" Content="   Cancelar   " Margin="1" FontSize="16"  Opacity="0.9" Background="{DynamicResource AccentColorBrush}" ToolTip="Ignora los cambios y permite salir" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
  
                        </Button>
                    </UniformGrid>
                </Grid>
            </Border>
    </Grid>
</Controls:MetroWindow>