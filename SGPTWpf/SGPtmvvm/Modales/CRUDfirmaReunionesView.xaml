<controls:MetroWindow x:Class="SGPTmvvm.Modales.CRUDfirmaReunionesView"
                      xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      xmlns:helpers="clr-namespace:SGPTWpf.Helpers"   
                      xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales"
                      xmlns:Soporte="clr-namespace:SGPTmvvm.Soporte" 
                         mc:Ignorable="d" 
                         SizeToContent="WidthAndHeight"
                         Icon="/SGPtWpf/Recursos/Imagenes/Iconos/CCSV2.png"
                         x:Name="root" 
                         ShowInTaskbar="True"
                         ResizeMode="CanMinimize"
                         WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow"
                      Dialog:DialogParticipation.Register="{Binding}"
                      helpers:DialogCloser.DialogResult="{Binding CloseWindowFlag}"
                      ShowTitleBar="True" 
                      Title="Gestion de reuniones"
                      
                      IsMaxRestoreButtonEnabled="False"
                      IsCloseButtonEnabled="True"
                      IsMinButtonEnabled="True"
                      SaveWindowPosition="False"
                      WindowTransitionsEnabled="True"
                      EnableDWMDropShadow="True"    >
    <controls:MetroWindow.Resources>


        <!--Este conversor es para poder activar o desactivar botones usando el multiDataTrigger-->
        <local:NotNullToBoolConverter x:Key="NotNullToBoolConverter"/>

    </controls:MetroWindow.Resources>

    <Grid>
        <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"  
				CornerRadius="0,0,0,0"   Margin="1" >
            <!--Black-->
            <Border.BitmapEffect>
                <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="370" ShadowDepth="0.7" />
                <!--Black-->
            </Border.BitmapEffect>
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="45"/>
                    <RowDefinition Height="45"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>

                    <RowDefinition Height="50" />
                    <RowDefinition Height="15"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="320"/>
                    <ColumnDefinition Width="320"/>
                    <!--<ColumnDefinition Width="180"/>-->

                </Grid.ColumnDefinitions>


                <TextBlock x:Name="MessageTextBlock" Text="{Binding Message, Mode=TwoWay}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" TextWrapping="Wrap" Margin="1,7,10,0" HorizontalAlignment="Center" FontSize="20" />

                <!--Sirve para activar el boton guardar no borrar-->
                <TextBox x:Name="txtBanderax" Text="{Binding txtBandera, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden"/>
                <!--<Label Content="* Buzon:  " FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="2" Grid.Row="1"/>-->
                <Label Content="* Fecha de reunion:   " FontSize="14" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                <Label Content="* Cliente:   " FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2"/>

                <Label Content="* Participantes:   "            FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="3" Grid.RowSpan="2"/>

                <Label Content="* Participantes internos:  "    FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="3"/>
                <Label Content="Participantes externos:  "      FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="3"/>
                <Label Content="* Asunto:   "                   FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="5" />
                <Label Content="* Conclusiones:   "             FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="6"/>
                <Label Content="* Tiempo:   "                   FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="7"/>

                <DatePicker  x:Name="dpickFechaRecepcion" IsEnabled="{Binding HabilitardpickFechaRecepcion}"
						DisplayDate="{Binding DateTime.Now()}" 
						Focusable="False" 
						SelectedDate="{Binding Fechareunion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
						Height="25" Grid.Column="1" Grid.Row="1" />

                <ComboBox   x:Name="cmbClientes" IsEnabled="{Binding HabilitarcmbClienteCorrespondencia}" Text="--Seleccione un Cliente--" IsEditable="True" IsReadOnly="True" 
						ItemsSource="{Binding ClientesListado, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
						DisplayMemberPath="razonsocialcliente"
						SelectedItem="{Binding SelectedCliente, Mode=Default, UpdateSourceTrigger=PropertyChanged}"
						Height="25" Grid.Column="1" Grid.Row="2" >
                    <!--<ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsSelected}" Width="20" VerticalAlignment="Center"  />
                                    <TextBlock Text="{Binding razonsocialcliente}" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>-->
                </ComboBox>

                <TextBox x:Name="txtAsuntoReuniones" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="5" IsEnabled="{Binding HabilitartxtAsuntoCorrespondencia}" Height="25" 
						controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Ingrese asunto de reunion" Margin="0,14,10,14">
                    <Binding Path="Asuntoreunion" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <local:TextBoxNoVacioValidationRule x:Name="AsuntoCartaxValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                            <local:ExcluirChar x:Name="AsuntoCartaValidation2"  ValidatesOnTargetUpdated="True" Message="Tarea contiene caracteres no permitidos."/>
                            <local:ValidacionMenorQue NumeritoMenorIgualQue="100" NumeritoMayorIgualQue="1" EsRequerido="True"  x:Name="AsuntoCartaxvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima es 100"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <TextBox x:Name="txtConclusiones" Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="2" IsEnabled="{Binding HabilitartxtConclusiones}" Height="25" Margin="0,14,10,15"
						controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Ingrese una conclusion">
                    <Binding Path="Conclusionesreunion" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <local:TextBoxNoVacioValidationRule x:Name="TareaxValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>
                            <local:ExcluirChar x:Name="TareaxValidation2"  ValidatesOnTargetUpdated="True" Message="Contiene caracteres no permitidos."/>
                            <local:ValidacionMenorQue NumeritoMenorIgualQue="200" NumeritoMayorIgualQue="5" EsRequerido="True"  x:Name="tareaxvalidation4" ValidatesOnTargetUpdated="True" Message="La longitud maxima es 200"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <Label Content="Horas:   " FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Grid.Row="7" Margin="19,10,0,13.333" Width="50" Height="26"/>
                <TextBox x:Name="txtTiempoH" Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="1" IsEnabled="{Binding HabilitartxtConclusiones}" Height="25" Margin="74,11,18.667,13.333"
						controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Ingrese el tiempo en horas">
                    <Binding Path="TiempoHduracionreunion" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <!--<local:TextBoxNoVacioValidationRule x:Name="TiempoValidation"  ValidatesOnTargetUpdated="True" Message="Dato requerido"/>-->
                            <local:ValidacionNumeroDecimal ValorMayorIgualQue="1" ValorMenorIgualQue="8" EsRequerido="False" x:Name="TiempoValidacion2" ValidatesOnTargetUpdated="True"  />
                            <local:ValidacionSoloDigitos ValidatesOnTargetUpdated="True" Message="Horas invalidas"/>
                            <local:ValidacionMenorQue NumeritoMenorIgualQue="5" NumeritoMayorIgualQue="1" EsRequerido="False"  x:Name="REunoinxvalidation4" ValidatesOnTargetUpdated="True" Message="Tamaño min/max"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <Label Content=" Minutos:" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2" Grid.Row="7" Margin="3.333,10,0,13.333" Width="68" Height="26"/>
                <TextBox x:Name="txtTiempoM" Grid.Column="2" Grid.Row="7" Grid.ColumnSpan="1" IsEnabled="{Binding HabilitartxtConclusiones}" Height="25" Margin="74.333,11,10,13.333"
						controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.Watermark="Ingrese el tiempo en minutos">
                    <Binding Path="TiempoMduracionreunion" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <local:ValidacionNumeroDecimal ValorMayorIgualQue="1" ValorMenorIgualQue="59" EsRequerido="False" x:Name="TiempoMinValidacion2" ValidatesOnTargetUpdated="True"  />
                            <local:ValidacionSoloDigitos ValidatesOnTargetUpdated="True" Message="Minutos invalidos"/>
                            <local:ValidacionMenorQue NumeritoMenorIgualQue="5" NumeritoMayorIgualQue="1" EsRequerido="False"  x:Name="TiempoMinvalidation4" ValidatesOnTargetUpdated="True" Message="Tamaño min/max"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <UniformGrid Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="3" Columns="2" HorizontalAlignment="Center" Margin="15,5,1,1">
                    <Button Grid.Column="4" x:Name="cmdGuardar"  Command="{Binding cmdGuardar_Click}" CommandParameter="{Binding ElementName=txtContraseña}" Content="Guardar" Margin="15,5,10,1" Width="150" FontSize="16"  ToolTip="Guarda la correspondencia en la base de datos" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Text, ElementName=txtBanderax}" Value="1" />

                                            <Condition Binding="{Binding (Validation.HasError), ElementName=txtAsuntoReuniones}" Value="false" />
                                            <Condition Binding="{Binding (Validation.HasError), ElementName=txtConclusiones}" Value="false" />
                                            <Condition Binding="{Binding (Validation.HasError), ElementName=txtTiempoH}" Value="false" />
                                            <Condition Binding="{Binding (Validation.HasError), ElementName=txtTiempoM}" Value="false" />

                                            <!--<Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbParticipantesInternos}" Value="True"/>-->
                                            <Condition Binding="{Binding SelectedItem, Converter={StaticResource NotNullToBoolConverter}, ElementName=cmbClientes}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Grid.Column="5" x:Name="cmdCancelar" Command="{Binding cmdCancelar_Click}" Content="Cancelar" Margin="15,5,1,1" FontSize="16"  Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" ToolTip="Ignora los cambios y permite salir">

                    </Button>
                </UniformGrid>

                <Soporte:MultiSelectComboBox x:Name="cmbParticipantesInternos"
                                                 HorizontalAlignment="Left" Margin="0,5,0,0" Grid.Row="4" VerticalAlignment="Top" Width="316" Height="35" 
                                                 DefaultText="Seleccione participantes internos" 
                                                 ItemsSource="{Binding ListadoParticipantesInternos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                 SelectedItems="{Binding SelectedParIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Grid.Column="1"/>
                <Soporte:MultiSelectComboBox Grid.Column="2" Margin="10,5,10,0" Grid.Row="4" VerticalAlignment="Top" Height="35" 
                                                 DefaultText="Seleccione participantes externos"
                                                 IsEnabled="{Binding HabilitarComboPartExt}" 
                                                 ItemsSource="{Binding ListadoParticipantesExternos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                 SelectedItems="{Binding SelectedParEx, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="cmbPartExternos" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>
            </Grid>
        </Border>
    </Grid>
</controls:MetroWindow>