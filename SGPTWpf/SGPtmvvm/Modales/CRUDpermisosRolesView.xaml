<!--<Window      x:Class="SGPTmvvm.Modales.CRUDpermisosRolesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales"
             xmlns:Soporte="clr-namespace:Soporte"
             mc:Ignorable="d" 
             d:DesignHeight="416.667" d:DesignWidth="450"
             x:Name="root" 
              ShowInTaskbar="False"
             ResizeMode="NoResize"
             Loaded="Window_Loaded"
             WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow">-->
<Controls:MetroWindow x:Class="SGPTmvvm.Modales.CRUDpermisosRolesView"
                         xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
                         mc:Ignorable="d" 
                         Icon="/SGPtWpf/Recursos/Imagenes/Iconos/CCSV2.png"
                         SizeToContent="WidthAndHeight"
                         x:Name="root" 
                         ShowInTaskbar="True"
                         ResizeMode="CanMinimize"
                         WindowStartupLocation="CenterScreen" 
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      Dialog:DialogParticipation.Register="{Binding}"
                      xmlns:helpers="clr-namespace:SGPTWpf.Helpers"
                      helpers:DialogCloser.DialogResult="{Binding CloseWindowFlag}"   
                      xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales"
                      ShowTitleBar="True" 
                      Title="Gestion de permisos del usuario"
                      
                      IsMaxRestoreButtonEnabled="False"
                      IsCloseButtonEnabled="True"
                      IsMinButtonEnabled="True"
                      SaveWindowPosition="False"
                      WindowTransitionsEnabled="True"
                      EnableDWMDropShadow="True"    >

    <Window.Resources>
        <!--<local:GroupsToTotalConverter x:Key="groupsConverter" />-->
        <!--<MyViewModel:GruposToTotalConverter x:Key="groupsConverter"/>-->
        <!--<ViewModels:CRUDpermisosRolesviewModel.GruposToTotalConverter x:Key="holaaa"/>-->
        <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <!--<Soporte:Throbber Visibility="{Binding ThrobberVisible}" RenderTransformOrigin="-2.117,0.017" />-->
        <!--<Soporte:Throbber Grid.Column="1" HorizontalAlignment="Center" Margin="21,127,0,0" VerticalAlignment="Top" Visibility="{Binding ThrobberVisible}" RenderTransformOrigin="-2.117,0.017"/>-->
        <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2" 
					CornerRadius="0,0,0,0" Margin="1">
            <Border.BitmapEffect>
                <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="370" ShadowDepth="0.7" />
            </Border.BitmapEffect>

            <Grid Margin="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="320"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>

                <TextBlock x:Name="MessageTextBlock" Grid.Row="0" Text="Configuracion de permisos de usuarios" TextWrapping="Wrap" Margin="5" HorizontalAlignment="Center" FontSize="20" />
                <!--<ProgressBar Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Name="BarraProgreso"  IsIndeterminate="True"  Height="22" Margin="21,357,0,0" VerticalAlignment="Top" Width="100" Minimum="-10" Maximum="10"/>-->
                <UniformGrid Grid.Row="1" Grid.Column="0"  Margin="0" Columns="7" HorizontalAlignment="Center"
    			VerticalAlignment="Center" >

                    <Label Content="DUI" FontSize="15" HorizontalAlignment="Right" />
                    <TextBox x:Name="txtDUIRol" Text="{Binding Idduipersona, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="125" Height="25" IsReadOnly="True" />
                    <Label  Content="Rol" FontSize="15" HorizontalAlignment="Right"/>
                    <TextBox  x:Name="txtRolRol" Text="{Binding Rol}" Width="125" Height="25" IsReadOnly="True"/>
                    <Label Content="Nombres" FontSize="15" HorizontalAlignment="Right" />
                    <TextBox x:Name="txtNombreRol" Text="{Binding Nombrespersona}" Width="125" Height="25" IsReadOnly="True" />
                    <!--<Label Content="Apellidos" FontSize="15" HorizontalAlignment="Right" />-->
                    <TextBox x:Name="txtApellidosRol" Text="{Binding Apellidospersona}" Width="125" Height="25" IsReadOnly="True" />
                </UniformGrid>
                <!--mycollection.View-->
                <!--ItemsSource="{Binding permisosRolesUsuarios}"-->
                <!--SelectedItem="{Binding SelectedUsuariosRol, Mode=TwoWay}"-->
                <DataGrid x:Name="dGRolesUsuarios" Grid.Row="2" Grid.Column="0"
    			    AutoGenerateColumns="False"
    			    ItemsSource="{Binding permisitosRolesView}"
    			    HeadersVisibility="Column"
    			   
    			    SelectionMode="Single"
    			    CanUserAddRows="False"
    			    CanUserDeleteRows="False">
                    <DataGrid.Resources>
                        <Style TargetType="CheckBox" x:Key="style">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding HasMaxNumberReached, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="true"/>
                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                            <!--<EventSetter Event="CheckBox.Checked" Handler="OnCheck" />
                                <EventSetter Event="CheckBox.Unchecked" Handler="OnCheck" />-->
                            <!--<EventSetter Event="CheckBox.Unchecked" Handler="DataGridCheckBoxColumn_Checked" />-->
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <!--<DataGridTextColumn Binding="{Binding ThePermisosRolesUsuarios.idpru, Mode=TwoWay}"  Header="ID" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding ThePermisosRolesUsuarios.nombreopcionpru, Mode=TwoWay}"  Header="Nombre opcion" Width="250"/>-->
                        <!--<DataGridTextColumn Binding="{Binding idpru, Mode=TwoWay}"  Header="ID" IsReadOnly="True"/>-->
                        <DataGridTextColumn Binding="{Binding nombreopcionpru, Mode=TwoWay}"  Header="Nombre opcion" Width="200" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding menupru, Mode=TwoWay}" Header="Menu" Width="100" IsReadOnly="True"/>
                        <DataGridCheckBoxColumn x:Name="puedeCrear"  Header="Crear" Width="75"
                                    Binding="{Binding crearpru, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}">
                        </DataGridCheckBoxColumn>
                        <DataGridCheckBoxColumn x:Name="puedeEliminar"  Header="Eliminar" Width="80"
                                    Binding="{Binding eliminarpru, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}">
                        </DataGridCheckBoxColumn>
                        <DataGridCheckBoxColumn x:Name="puedeConsultar"  Header="Consultar" 
                                    Binding="{Binding consultarpru, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                        </DataGridCheckBoxColumn>
                        <DataGridCheckBoxColumn x:Name="puedeEditar"  Header="Editar" 
                                    Binding="{Binding editarpru, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                        </DataGridCheckBoxColumn>
                        <DataGridCheckBoxColumn x:Name="puedeImprimir"  Header="Imprimir"                                 
                                    Binding="{Binding impresionpru, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"  
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                        </DataGridCheckBoxColumn>
                        <DataGridCheckBoxColumn x:Name="puedeExportar"  Header="Exportar" 
                                    Binding="{Binding exportacionpru, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                        </DataGridCheckBoxColumn>
                        <DataGridCheckBoxColumn x:Name="puedeRevisar"  Header="Revisar" 
                                    Binding="{Binding revisarpru, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                        </DataGridCheckBoxColumn>
                        <DataGridCheckBoxColumn x:Name="puedeAprobar"  Header="Aprobar" 
                                    Binding="{Binding aprobarpru, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"
                                    ElementStyle="{StaticResource style}" EditingElementStyle="{StaticResource style}" Width="80">
                        </DataGridCheckBoxColumn>



                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>

                            <!--<GroupStyle.HeaderTemplate>
							<DataTemplate>
								<DockPanel Background="Red">
									<TextBlock Text="{Binding Path=Name}"
										Foreground="Red" Margin="30,0,0,0" Width="150" />
								</DockPanel>
							</DataTemplate>
						</GroupStyle.HeaderTemplate>-->

                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}" >
                                    <Setter Property="Margin" Value="1,1,5,15" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander
												BorderBrush="Black"
												IsExpanded="False"
												Background="{DynamicResource AccentColorBrush}"
                                                
												BorderThickness="1,1,1,3">
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock VerticalAlignment="Center"
															FontWeight="Bold"
															Text="{Binding Path=Name}"
															Width="100" />
                                                            <TextBlock VerticalAlignment="Center"
															Text="Cantidad registros: " />
                                                            <TextBlock FontWeight="Bold"
															Text="{Binding ItemCount}" />
                                                            <!--<TextBlock VerticalAlignment="Center"
															TextAlignment="Right"
															Width="100"
															Text="Amount" />-->
                                                            <!--<TextBlock FontWeight="Bold"
															VerticalAlignment="Center"
															Text="{Binding Path=Items, Converter={StaticResource GruposToTotalConverter}}" />-->
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <Expander.Content>
                                                        <ItemsPresenter />
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>


                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>


                <UniformGrid Grid.Column="2" Grid.Row="3" Margin="5" Columns="2" HorizontalAlignment="Center"
								 VerticalAlignment="Stretch">
                    <Button Grid.Column="4" x:Name="cmdGuardarRolx"  Content="Guardar"  Width="150" Margin="15,1,5,1" FontSize="16"  ToolTip="Guarda las modificaciones a los permisos de roles en la base de datos"  Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" Command="{Binding cmdGuardar_Click}">

                    </Button>
                    <!--<Button Grid.Column="4" x:Name="cmdGuardarRolx" Command="{Binding cmdCancelar_Click}" Content="   Cancelar   " Margin="1" FontSize="16"  Opacity="0.9" Background="{DynamicResource AccentColorBrush}" ToolTip="Ignora los cambios y permite salir" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}">

                        </Button>-->
                    <Button Grid.Column="5" x:Name="cmdCancelarRolx"  Content="Cancelar" Margin="15,1,5,1" FontSize="16"  ToolTip="Cancela la modificacion de permisos de roles" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" Command="{Binding cmdCancelar_Click}">

                    </Button>
                </UniformGrid>
                <Grid Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <!--<ProgressBar x:Name="Barrita" Height="15" Value="{Binding Path=valorBarrita, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsIndeterminate="False"  Grid.Row="4" Visibility="{Binding Path=BarraProgresoVisible, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Minimum="0" Maximum="100"/>-->
                    <ProgressBar Grid.Row="0" Value="{Binding ValorDejarseVer, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged }" IsIndeterminate="False" Visibility="{Binding DejarseVer, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged }"/>
                    <TextBlock x:Name="ProgressTextBlock" Grid.Row="1" Text="{Binding valorProgresoTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Margin="5" HorizontalAlignment="Center" FontSize="14" Foreground="Green"/>
                    <!--<Button Grid.Column="2" x:Name="aceptar" Content='Aceptar' Command="{Binding Acepte}"/>
                        <Button Grid.Column="3" x:Name="declinar" Content='Declinar' Command="{Binding NoAcepte}"/>-->
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Controls:MetroWindow>