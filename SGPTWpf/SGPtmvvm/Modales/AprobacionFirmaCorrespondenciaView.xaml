<Controls:MetroWindow x:Class="SGPTmvvm.Modales.AprobacionFirmaCorrespondenciaView"
                         xmlns:ViewModels="clr-namespace:SGPTmvvm.Modales"
                         xmlns:local="clr-namespace:SGPTmvvm.CustomValidationAttributes"
                         mc:Ignorable="d" 
                         SizeToContent="WidthAndHeight"
                         x:Name="root" 
                         ShowInTaskbar="True"
                         Icon="/SGPtWpf/Recursos/Imagenes/Iconos/CCSV2.png"
                         ResizeMode="CanMinimize"
                         WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                      xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      Dialog:DialogParticipation.Register="{Binding}"
                      xmlns:helpers="clr-namespace:SGPTWpf.Helpers"
                      helpers:DialogCloser.DialogResult="{Binding CloseWindowFlag}"   
                      ShowTitleBar="True" 
                      Title="Aprobacion de correspondencia"
                      
                      IsMaxRestoreButtonEnabled="True"
                      IsCloseButtonEnabled="True"
                      IsMinButtonEnabled="True"
                      SaveWindowPosition="False"
                      WindowTransitionsEnabled="True"
                      EnableDWMDropShadow="True"    >

    <Window.Resources>

        <!--Este Style RadioButtonList es para que puedan haber radiobottons bindiados-->
        <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="3" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border BorderThickness="0" Background="Transparent">
                                        <RadioButton 
                                            Focusable="False"
                                            IsHitTestVisible="False"
                                            IsChecked="{TemplateBinding IsSelected}">
                                            <ContentPresenter />
                                        </RadioButton>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Ojo que este enummmmm si furulo No hay q darle en la nuca-->
        <local:EnumMatchToBooleanConverterRadioButtonInformes x:Key="enumConverter" />

        <!--<ResourceDictionary x:Key="asdf">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary 
                  Source="Recursos/Dictionary1.xaml">
                </ResourceDictionary>
                --><!--<ResourceDictionary 
                  Source="Resources/OtrosStilos.xaml">
                </ResourceDictionary>--><!--
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>-->
    </Window.Resources>
    <Grid>
        <!--<Soporte:Throbber Visibility="{Binding ThrobberVisible}" RenderTransformOrigin="-2.117,0.017" />-->
        <!--<Soporte:Throbber Grid.Column="1" HorizontalAlignment="Center" Margin="21,127,0,0" VerticalAlignment="Top" Visibility="{Binding ThrobberVisible}" RenderTransformOrigin="-2.117,0.017"/>-->

            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="2" 
					CornerRadius="0,0,0,0" VerticalAlignment="Stretch" Margin="1" >
                <Border.BitmapEffect>
                    <DropShadowBitmapEffect Color="AliceBlue" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                </Border.BitmapEffect>

                <Grid Margin="3,3,3,3" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="15"/>
                        <!--Este era para la busqueda, pero solo esta como idea. ponerlo en 75 en caso de utilizar-->
                        <RowDefinition Height="290"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="15"/>
                    <!--<RowDefinition Height="50"/>-->
                    </Grid.RowDefinitions>

                    <!--<TextBlock x:Name="MessageTextBlock" Grid.Row="0" Text="Aprobacion de informes de tiempo" TextWrapping="Wrap"  HorizontalAlignment="Left" FontSize="20"  Margin="1,13,0,67" Grid.RowSpan="2"/>-->
                    <!--<ProgressBar Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Name="BarraProgreso"  IsIndeterminate="True"  Height="22" Margin="21,357,0,0" VerticalAlignment="Top" Width="100" Minimum="-10" Maximum="10"/>-->
                    <!--No borrar para un posible cambio en esta ventana-->
                    <UniformGrid Grid.Row="1" Grid.Column="0"  Margin="3" Columns="6" HorizontalAlignment="Stretch" VerticalAlignment="Top" >
                        <!--No borrar para un posible cambio en esta ventana-->


                    </UniformGrid>
                    <DataGrid Grid.Row="2" 
                        AutoGenerateColumns="False"
                        Margin="5,1,5,1"
                        Name="dataGrid"
                        VerticalAlignment="Top"
                        HorizontalScrollBarVisibility="Auto"
                        Width="Auto"
                        ItemsSource="{Binding Path= CorrespondenciaListado , UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding CorrespondenciaSelected}"
                        CanUserAddRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding correlativo, Mode=TwoWay}"  Header="No." x:Name="correlativo" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding numerocorrespondencia, Mode=TwoWay}" Header="Numero" x:Name="CorrNumcorresp" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding QueCorrespondencia, Mode=TwoWay}" Header="Buzon" x:Name="CorrBuzoncorresp" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding TipoCorrespondencia, Mode=TwoWay}" Header="Tipo" x:Name="CorrTipocorresp" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding asuntocorrespondencia, Mode=TwoWay}" x:Name="CorrAsunto" Header="Asunto de correspondencia" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding auditorfirmacarta, Mode=TwoWay}"  x:Name="CorrPfirma" Header="Persona firma" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding fecharecepcioncorrespondencia, Mode=TwoWay}"  x:Name="CorrFecha" Header="Fecha" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding ReferenciaNoDisponibleAun, Mode=TwoWay}"  x:Name="CorrReferencia" Header="Referencia" IsReadOnly="True"/>

                            <DataGridTemplateColumn Header="Aprobar">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>

                                        <RadioButton GroupName="{Binding Path=idcorrespondencia}" 
                                                IsChecked="{Binding Path=aprobacioncorrespondencia, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, 
                                                Converter={StaticResource enumConverter},
                                                ConverterParameter={x:Static local:TipoEnumerador.A}}" >Aprobar
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Checked">
                                                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=cmdGuardar}" PropertyName="IsEnabled" Value="True"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </RadioButton>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Rechazar">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <RadioButton Content="Rechazar" GroupName="{Binding Path=idcorrespondencia}" IsChecked="{Binding Path=aprobacioncorrespondencia, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource enumConverter}, ConverterParameter={x:Static local:TipoEnumerador.R}}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Checked">
                                                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=cmdGuardar}" PropertyName="IsEnabled" Value="True"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </RadioButton>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Pendiente">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <RadioButton GroupName="{Binding Path=idcorrespondencia}" IsChecked="{Binding Path=aprobacioncorrespondencia, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource enumConverter}, ConverterParameter={x:Static local:TipoEnumerador.P}}">Pendiente
                                            <!--<i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Checked">
                                                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=cmdGuardar}" PropertyName="IsEnabled" Value="False"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>-->
                                        </RadioButton>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <UniformGrid Grid.Column="2" Grid.Row="3" Margin="5" Columns="3" HorizontalAlignment="Center"
								 VerticalAlignment="Stretch">
                        <Button Grid.Column="4" x:Name="cmdGuardar" IsEnabled="{Binding HabilitarcmdGuardar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   Command="{Binding cmdGuardar_Click}" CommandParameter="{Binding ElementName=txtContraseña}" Content="     Aprobar     " Margin="0,0,10,0" FontSize="16"  ToolTip="Guarda el nuevo rol en la base de datos" Opacity="0.9" Background="{DynamicResource AccentColorBrush}">
                            <!--<Button.Effect>
                                <DropShadowEffect BlurRadius="20"/>
                            </Button.Effect>-->
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyleSGPtWpf}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <!--<Condition Binding="{Binding ElementName=txtNombreRol, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding ElementName=txtDescripcionRol, Path=(Validation.HasError)}" Value="false" />
                                                <Condition Binding="{Binding HabilitartxtNombreRol, Mode=TwoWay}" Value="true"/>-->
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="cmdCancelarApCorrespx"  Content="     Cancelar     " Margin="15,0,0,0" FontSize="16"  ToolTip="Cancela la aprobacion de informes" Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" Command="{Binding cmdCancelar_Click}">
                            <!--<Button.Effect>
                                <DropShadowEffect BlurRadius="20"/>
                            </Button.Effect>
                            --><!--<Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                -->
                            <!--<Condition Binding="{Binding HabilitarBotonCancelar, Mode=TwoWay}" Value="true"/>-->
                            <!--
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>-->
                        </Button>

                        <Button x:Name="cmdConsultar"  Content="     Consultar     " Margin="15,0,0,0" FontSize="16"  ToolTip="Cancela la modificacion de permisos de roles" Opacity="0.9" Background="{DynamicResource AccentColorBrush}" Style="{StaticResource AccentedSquareButtonStyleSGPtWpf}" Command="{Binding cmdConsultar_Click}">
                        </Button>
                    </UniformGrid>
                </Grid>
            </Border>

    </Grid>
</Controls:MetroWindow>